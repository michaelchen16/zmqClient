// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ts_wmi_event.proto

#ifndef PROTOBUF_ts_5fwmi_5fevent_2eproto__INCLUDED
#define PROTOBUF_ts_5fwmi_5fevent_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace ts_wmi_events {

	// Internal implementation detail -- do not call these.
	void protobuf_AddDesc_ts_5fwmi_5fevent_2eproto();
	void protobuf_AssignDesc_ts_5fwmi_5fevent_2eproto();
	void protobuf_ShutdownFile_ts_5fwmi_5fevent_2eproto();

	class ts_wmi_event;
	class ts_wmi_insertion_pair;

	// ===================================================================

	class ts_wmi_insertion_pair : public ::google::protobuf::Message {
	public:
		ts_wmi_insertion_pair();
		virtual ~ts_wmi_insertion_pair();

		ts_wmi_insertion_pair(const ts_wmi_insertion_pair& from);

		inline ts_wmi_insertion_pair& operator=(const ts_wmi_insertion_pair& from) {
			CopyFrom(from);
			return *this;
		}

		inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
			return _internal_metadata_.unknown_fields();
		}

		inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
			return _internal_metadata_.mutable_unknown_fields();
		}

		inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
		inline void* GetMaybeArenaPointer() const {
			return MaybeArenaPtr();
		}
		static const ::google::protobuf::Descriptor* descriptor();
		static const ts_wmi_insertion_pair& default_instance();

		void UnsafeArenaSwap(ts_wmi_insertion_pair* other);
		void Swap(ts_wmi_insertion_pair* other);

		// implements Message ----------------------------------------------

		inline ts_wmi_insertion_pair* New() const { return New(NULL); }

		ts_wmi_insertion_pair* New(::google::protobuf::Arena* arena) const;
		void CopyFrom(const ::google::protobuf::Message& from);
		void MergeFrom(const ::google::protobuf::Message& from);
		void CopyFrom(const ts_wmi_insertion_pair& from);
		void MergeFrom(const ts_wmi_insertion_pair& from);
		void Clear();
		bool IsInitialized() const;

		int ByteSize() const;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input);
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
		int GetCachedSize() const { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const;
		void InternalSwap(ts_wmi_insertion_pair* other);
	protected:
		explicit ts_wmi_insertion_pair(::google::protobuf::Arena* arena);
	private:
		static void ArenaDtor(void* object);
		inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return _internal_metadata_.arena();
		}
		inline void* MaybeArenaPtr() const {
			return _internal_metadata_.raw_arena_ptr();
		}
	public:

		::google::protobuf::Metadata GetMetadata() const;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// required string key = 1;
		bool has_key() const;
		void clear_key();
		static const int kKeyFieldNumber = 1;
		const ::std::string& key() const;
		void set_key(const ::std::string& value);
		void set_key(const char* value);
		void set_key(const char* value, size_t size);
		::std::string* mutable_key();
		::std::string* release_key();
		void set_allocated_key(::std::string* key);
		::std::string* unsafe_arena_release_key();
		void unsafe_arena_set_allocated_key(
			::std::string* key);

		// required string value = 2;
		bool has_value() const;
		void clear_value();
		static const int kValueFieldNumber = 2;
		const ::std::string& value() const;
		void set_value(const ::std::string& value);
		void set_value(const char* value);
		void set_value(const char* value, size_t size);
		::std::string* mutable_value();
		::std::string* release_value();
		void set_allocated_value(::std::string* value);
		::std::string* unsafe_arena_release_value();
		void unsafe_arena_set_allocated_value(
			::std::string* value);

		// @@protoc_insertion_point(class_scope:ts_wmi_events.ts_wmi_insertion_pair)
	private:
		inline void set_has_key();
		inline void clear_has_key();
		inline void set_has_value();
		inline void clear_has_value();

		// helper for ByteSize()
		int RequiredFieldsByteSizeFallback() const;

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		friend class ::google::protobuf::Arena;
		typedef void InternalArenaConstructable_;
		typedef void DestructorSkippable_;
		::google::protobuf::uint32 _has_bits_[1];
		mutable int _cached_size_;
		::google::protobuf::internal::ArenaStringPtr key_;
		::google::protobuf::internal::ArenaStringPtr value_;
		friend void  protobuf_AddDesc_ts_5fwmi_5fevent_2eproto();
		friend void protobuf_AssignDesc_ts_5fwmi_5fevent_2eproto();
		friend void protobuf_ShutdownFile_ts_5fwmi_5fevent_2eproto();

		void InitAsDefaultInstance();
		static ts_wmi_insertion_pair* default_instance_;
	};
	// -------------------------------------------------------------------

	class ts_wmi_event : public ::google::protobuf::Message {
	public:
		ts_wmi_event();
		virtual ~ts_wmi_event();

		ts_wmi_event(const ts_wmi_event& from);

		inline ts_wmi_event& operator=(const ts_wmi_event& from) {
			CopyFrom(from);
			return *this;
		}

		inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
			return _internal_metadata_.unknown_fields();
		}

		inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
			return _internal_metadata_.mutable_unknown_fields();
		}

		inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
		inline void* GetMaybeArenaPointer() const {
			return MaybeArenaPtr();
		}
		static const ::google::protobuf::Descriptor* descriptor();
		static const ts_wmi_event& default_instance();

		void UnsafeArenaSwap(ts_wmi_event* other);
		void Swap(ts_wmi_event* other);

		// implements Message ----------------------------------------------

		inline ts_wmi_event* New() const { return New(NULL); }

		ts_wmi_event* New(::google::protobuf::Arena* arena) const;
		void CopyFrom(const ::google::protobuf::Message& from);
		void MergeFrom(const ::google::protobuf::Message& from);
		void CopyFrom(const ts_wmi_event& from);
		void MergeFrom(const ts_wmi_event& from);
		void Clear();
		bool IsInitialized() const;

		int ByteSize() const;
		bool MergePartialFromCodedStream(
			::google::protobuf::io::CodedInputStream* input);
		void SerializeWithCachedSizes(
			::google::protobuf::io::CodedOutputStream* output) const;
		::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
		int GetCachedSize() const { return _cached_size_; }
	private:
		void SharedCtor();
		void SharedDtor();
		void SetCachedSize(int size) const;
		void InternalSwap(ts_wmi_event* other);
	protected:
		explicit ts_wmi_event(::google::protobuf::Arena* arena);
	private:
		static void ArenaDtor(void* object);
		inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
	private:
		inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
			return _internal_metadata_.arena();
		}
		inline void* MaybeArenaPtr() const {
			return _internal_metadata_.raw_arena_ptr();
		}
	public:

		::google::protobuf::Metadata GetMetadata() const;

		// nested types ----------------------------------------------------

		// accessors -------------------------------------------------------

		// required string CategoryString = 1;
		bool has_categorystring() const;
		void clear_categorystring();
		static const int kCategoryStringFieldNumber = 1;
		const ::std::string& categorystring() const;
		void set_categorystring(const ::std::string& value);
		void set_categorystring(const char* value);
		void set_categorystring(const char* value, size_t size);
		::std::string* mutable_categorystring();
		::std::string* release_categorystring();
		void set_allocated_categorystring(::std::string* categorystring);
		::std::string* unsafe_arena_release_categorystring();
		void unsafe_arena_set_allocated_categorystring(
			::std::string* categorystring);

		// required string ComputerName = 2;
		bool has_computername() const;
		void clear_computername();
		static const int kComputerNameFieldNumber = 2;
		const ::std::string& computername() const;
		void set_computername(const ::std::string& value);
		void set_computername(const char* value);
		void set_computername(const char* value, size_t size);
		::std::string* mutable_computername();
		::std::string* release_computername();
		void set_allocated_computername(::std::string* computername);
		::std::string* unsafe_arena_release_computername();
		void unsafe_arena_set_allocated_computername(
			::std::string* computername);

		// required uint32 EventIdentifier = 3;
		bool has_eventidentifier() const;
		void clear_eventidentifier();
		static const int kEventIdentifierFieldNumber = 3;
		::google::protobuf::uint32 eventidentifier() const;
		void set_eventidentifier(::google::protobuf::uint32 value);

		// required uint32 EventType = 4;
		bool has_eventtype() const;
		void clear_eventtype();
		static const int kEventTypeFieldNumber = 4;
		::google::protobuf::uint32 eventtype() const;
		void set_eventtype(::google::protobuf::uint32 value);

		// required string Logfile = 5;
		bool has_logfile() const;
		void clear_logfile();
		static const int kLogfileFieldNumber = 5;
		const ::std::string& logfile() const;
		void set_logfile(const ::std::string& value);
		void set_logfile(const char* value);
		void set_logfile(const char* value, size_t size);
		::std::string* mutable_logfile();
		::std::string* release_logfile();
		void set_allocated_logfile(::std::string* logfile);
		::std::string* unsafe_arena_release_logfile();
		void unsafe_arena_set_allocated_logfile(
			::std::string* logfile);

		// required uint32 RecordNumber = 6;
		bool has_recordnumber() const;
		void clear_recordnumber();
		static const int kRecordNumberFieldNumber = 6;
		::google::protobuf::uint32 recordnumber() const;
		void set_recordnumber(::google::protobuf::uint32 value);

		// required string SourceName = 7;
		bool has_sourcename() const;
		void clear_sourcename();
		static const int kSourceNameFieldNumber = 7;
		const ::std::string& sourcename() const;
		void set_sourcename(const ::std::string& value);
		void set_sourcename(const char* value);
		void set_sourcename(const char* value, size_t size);
		::std::string* mutable_sourcename();
		::std::string* release_sourcename();
		void set_allocated_sourcename(::std::string* sourcename);
		::std::string* unsafe_arena_release_sourcename();
		void unsafe_arena_set_allocated_sourcename(
			::std::string* sourcename);

		// required uint64 TimeGenerated = 8;
		bool has_timegenerated() const;
		void clear_timegenerated();
		static const int kTimeGeneratedFieldNumber = 8;
		::google::protobuf::uint64 timegenerated() const;
		void set_timegenerated(::google::protobuf::uint64 value);

		// required uint64 TimeWritten = 9;
		bool has_timewritten() const;
		void clear_timewritten();
		static const int kTimeWrittenFieldNumber = 9;
		::google::protobuf::uint64 timewritten() const;
		void set_timewritten(::google::protobuf::uint64 value);

		// required string User = 10;
		bool has_user() const;
		void clear_user();
		static const int kUserFieldNumber = 10;
		const ::std::string& user() const;
		void set_user(const ::std::string& value);
		void set_user(const char* value);
		void set_user(const char* value, size_t size);
		::std::string* mutable_user();
		::std::string* release_user();
		void set_allocated_user(::std::string* user);
		::std::string* unsafe_arena_release_user();
		void unsafe_arena_set_allocated_user(
			::std::string* user);

		// repeated .ts_wmi_events.ts_wmi_insertion_pair InsertionString = 11;
		int insertionstring_size() const;
		void clear_insertionstring();
		static const int kInsertionStringFieldNumber = 11;
		const ::ts_wmi_events::ts_wmi_insertion_pair& insertionstring(int index) const;
		::ts_wmi_events::ts_wmi_insertion_pair* mutable_insertionstring(int index);
		::ts_wmi_events::ts_wmi_insertion_pair* add_insertionstring();
		::google::protobuf::RepeatedPtrField< ::ts_wmi_events::ts_wmi_insertion_pair >*
			mutable_insertionstring();
		const ::google::protobuf::RepeatedPtrField< ::ts_wmi_events::ts_wmi_insertion_pair >&
			insertionstring() const;

		// @@protoc_insertion_point(class_scope:ts_wmi_events.ts_wmi_event)
	private:
		inline void set_has_categorystring();
		inline void clear_has_categorystring();
		inline void set_has_computername();
		inline void clear_has_computername();
		inline void set_has_eventidentifier();
		inline void clear_has_eventidentifier();
		inline void set_has_eventtype();
		inline void clear_has_eventtype();
		inline void set_has_logfile();
		inline void clear_has_logfile();
		inline void set_has_recordnumber();
		inline void clear_has_recordnumber();
		inline void set_has_sourcename();
		inline void clear_has_sourcename();
		inline void set_has_timegenerated();
		inline void clear_has_timegenerated();
		inline void set_has_timewritten();
		inline void clear_has_timewritten();
		inline void set_has_user();
		inline void clear_has_user();

		// helper for ByteSize()
		int RequiredFieldsByteSizeFallback() const;

		::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
		friend class ::google::protobuf::Arena;
		typedef void InternalArenaConstructable_;
		typedef void DestructorSkippable_;
		::google::protobuf::uint32 _has_bits_[1];
		mutable int _cached_size_;
		::google::protobuf::internal::ArenaStringPtr categorystring_;
		::google::protobuf::internal::ArenaStringPtr computername_;
		::google::protobuf::uint32 eventidentifier_;
		::google::protobuf::uint32 eventtype_;
		::google::protobuf::internal::ArenaStringPtr logfile_;
		::google::protobuf::internal::ArenaStringPtr sourcename_;
		::google::protobuf::uint64 timegenerated_;
		::google::protobuf::uint64 timewritten_;
		::google::protobuf::internal::ArenaStringPtr user_;
		::google::protobuf::RepeatedPtrField< ::ts_wmi_events::ts_wmi_insertion_pair > insertionstring_;
		::google::protobuf::uint32 recordnumber_;
		friend void  protobuf_AddDesc_ts_5fwmi_5fevent_2eproto();
		friend void protobuf_AssignDesc_ts_5fwmi_5fevent_2eproto();
		friend void protobuf_ShutdownFile_ts_5fwmi_5fevent_2eproto();

		void InitAsDefaultInstance();
		static ts_wmi_event* default_instance_;
	};
	// ===================================================================


	// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
	// ts_wmi_insertion_pair

	// required string key = 1;
	inline bool ts_wmi_insertion_pair::has_key() const {
		return (_has_bits_[0] & 0x00000001u) != 0;
	}
	inline void ts_wmi_insertion_pair::set_has_key() {
		_has_bits_[0] |= 0x00000001u;
	}
	inline void ts_wmi_insertion_pair::clear_has_key() {
		_has_bits_[0] &= ~0x00000001u;
	}
	inline void ts_wmi_insertion_pair::clear_key() {
		key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		clear_has_key();
	}
	inline const ::std::string& ts_wmi_insertion_pair::key() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_insertion_pair.key)
		return key_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void ts_wmi_insertion_pair::set_key(const ::std::string& value) {
		set_has_key();
		key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_insertion_pair.key)
	}
	inline void ts_wmi_insertion_pair::set_key(const char* value) {
		set_has_key();
		key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_char:ts_wmi_events.ts_wmi_insertion_pair.key)
	}
	inline void ts_wmi_insertion_pair::set_key(const char* value,
		size_t size) {
		set_has_key();
		key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
			reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_pointer:ts_wmi_events.ts_wmi_insertion_pair.key)
	}
	inline ::std::string* ts_wmi_insertion_pair::mutable_key() {
		set_has_key();
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_insertion_pair.key)
		return key_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	inline ::std::string* ts_wmi_insertion_pair::release_key() {
		clear_has_key();
		return key_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	inline ::std::string* ts_wmi_insertion_pair::unsafe_arena_release_key() {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		clear_has_key();
		return key_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			GetArenaNoVirtual());
	}
	inline void ts_wmi_insertion_pair::set_allocated_key(::std::string* key) {
		if (key != NULL) {
			set_has_key();
		}
		else {
			clear_has_key();
		}
		key_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key,
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_insertion_pair.key)
	}
	inline void ts_wmi_insertion_pair::unsafe_arena_set_allocated_key(
		::std::string* key) {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		if (key != NULL) {
			set_has_key();
		}
		else {
			clear_has_key();
		}
		key_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			key, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_insertion_pair.key)
	}

	// required string value = 2;
	inline bool ts_wmi_insertion_pair::has_value() const {
		return (_has_bits_[0] & 0x00000002u) != 0;
	}
	inline void ts_wmi_insertion_pair::set_has_value() {
		_has_bits_[0] |= 0x00000002u;
	}
	inline void ts_wmi_insertion_pair::clear_has_value() {
		_has_bits_[0] &= ~0x00000002u;
	}
	inline void ts_wmi_insertion_pair::clear_value() {
		value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		clear_has_value();
	}
	inline const ::std::string& ts_wmi_insertion_pair::value() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_insertion_pair.value)
		return value_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void ts_wmi_insertion_pair::set_value(const ::std::string& value) {
		set_has_value();
		value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_insertion_pair.value)
	}
	inline void ts_wmi_insertion_pair::set_value(const char* value) {
		set_has_value();
		value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_char:ts_wmi_events.ts_wmi_insertion_pair.value)
	}
	inline void ts_wmi_insertion_pair::set_value(const char* value,
		size_t size) {
		set_has_value();
		value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
			reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_pointer:ts_wmi_events.ts_wmi_insertion_pair.value)
	}
	inline ::std::string* ts_wmi_insertion_pair::mutable_value() {
		set_has_value();
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_insertion_pair.value)
		return value_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	inline ::std::string* ts_wmi_insertion_pair::release_value() {
		clear_has_value();
		return value_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	inline ::std::string* ts_wmi_insertion_pair::unsafe_arena_release_value() {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		clear_has_value();
		return value_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			GetArenaNoVirtual());
	}
	inline void ts_wmi_insertion_pair::set_allocated_value(::std::string* value) {
		if (value != NULL) {
			set_has_value();
		}
		else {
			clear_has_value();
		}
		value_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_insertion_pair.value)
	}
	inline void ts_wmi_insertion_pair::unsafe_arena_set_allocated_value(
		::std::string* value) {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		if (value != NULL) {
			set_has_value();
		}
		else {
			clear_has_value();
		}
		value_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_insertion_pair.value)
	}

	// -------------------------------------------------------------------

	// ts_wmi_event

	// required string CategoryString = 1;
	inline bool ts_wmi_event::has_categorystring() const {
		return (_has_bits_[0] & 0x00000001u) != 0;
	}
	inline void ts_wmi_event::set_has_categorystring() {
		_has_bits_[0] |= 0x00000001u;
	}
	inline void ts_wmi_event::clear_has_categorystring() {
		_has_bits_[0] &= ~0x00000001u;
	}
	inline void ts_wmi_event::clear_categorystring() {
		categorystring_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		clear_has_categorystring();
	}
	inline const ::std::string& ts_wmi_event::categorystring() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.CategoryString)
		return categorystring_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void ts_wmi_event::set_categorystring(const ::std::string& value) {
		set_has_categorystring();
		categorystring_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.CategoryString)
	}
	inline void ts_wmi_event::set_categorystring(const char* value) {
		set_has_categorystring();
		categorystring_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_char:ts_wmi_events.ts_wmi_event.CategoryString)
	}
	inline void ts_wmi_event::set_categorystring(const char* value,
		size_t size) {
		set_has_categorystring();
		categorystring_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
			reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_pointer:ts_wmi_events.ts_wmi_event.CategoryString)
	}
	inline ::std::string* ts_wmi_event::mutable_categorystring() {
		set_has_categorystring();
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_event.CategoryString)
		return categorystring_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	inline ::std::string* ts_wmi_event::release_categorystring() {
		clear_has_categorystring();
		return categorystring_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	inline ::std::string* ts_wmi_event::unsafe_arena_release_categorystring() {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		clear_has_categorystring();
		return categorystring_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			GetArenaNoVirtual());
	}
	inline void ts_wmi_event::set_allocated_categorystring(::std::string* categorystring) {
		if (categorystring != NULL) {
			set_has_categorystring();
		}
		else {
			clear_has_categorystring();
		}
		categorystring_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), categorystring,
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.CategoryString)
	}
	inline void ts_wmi_event::unsafe_arena_set_allocated_categorystring(
		::std::string* categorystring) {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		if (categorystring != NULL) {
			set_has_categorystring();
		}
		else {
			clear_has_categorystring();
		}
		categorystring_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			categorystring, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.CategoryString)
	}

	// required string ComputerName = 2;
	inline bool ts_wmi_event::has_computername() const {
		return (_has_bits_[0] & 0x00000002u) != 0;
	}
	inline void ts_wmi_event::set_has_computername() {
		_has_bits_[0] |= 0x00000002u;
	}
	inline void ts_wmi_event::clear_has_computername() {
		_has_bits_[0] &= ~0x00000002u;
	}
	inline void ts_wmi_event::clear_computername() {
		computername_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		clear_has_computername();
	}
	inline const ::std::string& ts_wmi_event::computername() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.ComputerName)
		return computername_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void ts_wmi_event::set_computername(const ::std::string& value) {
		set_has_computername();
		computername_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.ComputerName)
	}
	inline void ts_wmi_event::set_computername(const char* value) {
		set_has_computername();
		computername_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_char:ts_wmi_events.ts_wmi_event.ComputerName)
	}
	inline void ts_wmi_event::set_computername(const char* value,
		size_t size) {
		set_has_computername();
		computername_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
			reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_pointer:ts_wmi_events.ts_wmi_event.ComputerName)
	}
	inline ::std::string* ts_wmi_event::mutable_computername() {
		set_has_computername();
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_event.ComputerName)
		return computername_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	inline ::std::string* ts_wmi_event::release_computername() {
		clear_has_computername();
		return computername_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	inline ::std::string* ts_wmi_event::unsafe_arena_release_computername() {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		clear_has_computername();
		return computername_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			GetArenaNoVirtual());
	}
	inline void ts_wmi_event::set_allocated_computername(::std::string* computername) {
		if (computername != NULL) {
			set_has_computername();
		}
		else {
			clear_has_computername();
		}
		computername_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), computername,
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.ComputerName)
	}
	inline void ts_wmi_event::unsafe_arena_set_allocated_computername(
		::std::string* computername) {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		if (computername != NULL) {
			set_has_computername();
		}
		else {
			clear_has_computername();
		}
		computername_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			computername, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.ComputerName)
	}

	// required uint32 EventIdentifier = 3;
	inline bool ts_wmi_event::has_eventidentifier() const {
		return (_has_bits_[0] & 0x00000004u) != 0;
	}
	inline void ts_wmi_event::set_has_eventidentifier() {
		_has_bits_[0] |= 0x00000004u;
	}
	inline void ts_wmi_event::clear_has_eventidentifier() {
		_has_bits_[0] &= ~0x00000004u;
	}
	inline void ts_wmi_event::clear_eventidentifier() {
		eventidentifier_ = 0u;
		clear_has_eventidentifier();
	}
	inline ::google::protobuf::uint32 ts_wmi_event::eventidentifier() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.EventIdentifier)
		return eventidentifier_;
	}
	inline void ts_wmi_event::set_eventidentifier(::google::protobuf::uint32 value) {
		set_has_eventidentifier();
		eventidentifier_ = value;
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.EventIdentifier)
	}

	// required uint32 EventType = 4;
	inline bool ts_wmi_event::has_eventtype() const {
		return (_has_bits_[0] & 0x00000008u) != 0;
	}
	inline void ts_wmi_event::set_has_eventtype() {
		_has_bits_[0] |= 0x00000008u;
	}
	inline void ts_wmi_event::clear_has_eventtype() {
		_has_bits_[0] &= ~0x00000008u;
	}
	inline void ts_wmi_event::clear_eventtype() {
		eventtype_ = 0u;
		clear_has_eventtype();
	}
	inline ::google::protobuf::uint32 ts_wmi_event::eventtype() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.EventType)
		return eventtype_;
	}
	inline void ts_wmi_event::set_eventtype(::google::protobuf::uint32 value) {
		set_has_eventtype();
		eventtype_ = value;
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.EventType)
	}

	// required string Logfile = 5;
	inline bool ts_wmi_event::has_logfile() const {
		return (_has_bits_[0] & 0x00000010u) != 0;
	}
	inline void ts_wmi_event::set_has_logfile() {
		_has_bits_[0] |= 0x00000010u;
	}
	inline void ts_wmi_event::clear_has_logfile() {
		_has_bits_[0] &= ~0x00000010u;
	}
	inline void ts_wmi_event::clear_logfile() {
		logfile_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		clear_has_logfile();
	}
	inline const ::std::string& ts_wmi_event::logfile() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.Logfile)
		return logfile_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void ts_wmi_event::set_logfile(const ::std::string& value) {
		set_has_logfile();
		logfile_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.Logfile)
	}
	inline void ts_wmi_event::set_logfile(const char* value) {
		set_has_logfile();
		logfile_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_char:ts_wmi_events.ts_wmi_event.Logfile)
	}
	inline void ts_wmi_event::set_logfile(const char* value,
		size_t size) {
		set_has_logfile();
		logfile_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
			reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_pointer:ts_wmi_events.ts_wmi_event.Logfile)
	}
	inline ::std::string* ts_wmi_event::mutable_logfile() {
		set_has_logfile();
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_event.Logfile)
		return logfile_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	inline ::std::string* ts_wmi_event::release_logfile() {
		clear_has_logfile();
		return logfile_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	inline ::std::string* ts_wmi_event::unsafe_arena_release_logfile() {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		clear_has_logfile();
		return logfile_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			GetArenaNoVirtual());
	}
	inline void ts_wmi_event::set_allocated_logfile(::std::string* logfile) {
		if (logfile != NULL) {
			set_has_logfile();
		}
		else {
			clear_has_logfile();
		}
		logfile_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logfile,
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.Logfile)
	}
	inline void ts_wmi_event::unsafe_arena_set_allocated_logfile(
		::std::string* logfile) {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		if (logfile != NULL) {
			set_has_logfile();
		}
		else {
			clear_has_logfile();
		}
		logfile_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			logfile, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.Logfile)
	}

	// required uint32 RecordNumber = 6;
	inline bool ts_wmi_event::has_recordnumber() const {
		return (_has_bits_[0] & 0x00000020u) != 0;
	}
	inline void ts_wmi_event::set_has_recordnumber() {
		_has_bits_[0] |= 0x00000020u;
	}
	inline void ts_wmi_event::clear_has_recordnumber() {
		_has_bits_[0] &= ~0x00000020u;
	}
	inline void ts_wmi_event::clear_recordnumber() {
		recordnumber_ = 0u;
		clear_has_recordnumber();
	}
	inline ::google::protobuf::uint32 ts_wmi_event::recordnumber() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.RecordNumber)
		return recordnumber_;
	}
	inline void ts_wmi_event::set_recordnumber(::google::protobuf::uint32 value) {
		set_has_recordnumber();
		recordnumber_ = value;
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.RecordNumber)
	}

	// required string SourceName = 7;
	inline bool ts_wmi_event::has_sourcename() const {
		return (_has_bits_[0] & 0x00000040u) != 0;
	}
	inline void ts_wmi_event::set_has_sourcename() {
		_has_bits_[0] |= 0x00000040u;
	}
	inline void ts_wmi_event::clear_has_sourcename() {
		_has_bits_[0] &= ~0x00000040u;
	}
	inline void ts_wmi_event::clear_sourcename() {
		sourcename_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		clear_has_sourcename();
	}
	inline const ::std::string& ts_wmi_event::sourcename() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.SourceName)
		return sourcename_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void ts_wmi_event::set_sourcename(const ::std::string& value) {
		set_has_sourcename();
		sourcename_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.SourceName)
	}
	inline void ts_wmi_event::set_sourcename(const char* value) {
		set_has_sourcename();
		sourcename_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_char:ts_wmi_events.ts_wmi_event.SourceName)
	}
	inline void ts_wmi_event::set_sourcename(const char* value,
		size_t size) {
		set_has_sourcename();
		sourcename_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
			reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_pointer:ts_wmi_events.ts_wmi_event.SourceName)
	}
	inline ::std::string* ts_wmi_event::mutable_sourcename() {
		set_has_sourcename();
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_event.SourceName)
		return sourcename_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	inline ::std::string* ts_wmi_event::release_sourcename() {
		clear_has_sourcename();
		return sourcename_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	inline ::std::string* ts_wmi_event::unsafe_arena_release_sourcename() {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		clear_has_sourcename();
		return sourcename_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			GetArenaNoVirtual());
	}
	inline void ts_wmi_event::set_allocated_sourcename(::std::string* sourcename) {
		if (sourcename != NULL) {
			set_has_sourcename();
		}
		else {
			clear_has_sourcename();
		}
		sourcename_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sourcename,
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.SourceName)
	}
	inline void ts_wmi_event::unsafe_arena_set_allocated_sourcename(
		::std::string* sourcename) {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		if (sourcename != NULL) {
			set_has_sourcename();
		}
		else {
			clear_has_sourcename();
		}
		sourcename_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			sourcename, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.SourceName)
	}

	// required uint64 TimeGenerated = 8;
	inline bool ts_wmi_event::has_timegenerated() const {
		return (_has_bits_[0] & 0x00000080u) != 0;
	}
	inline void ts_wmi_event::set_has_timegenerated() {
		_has_bits_[0] |= 0x00000080u;
	}
	inline void ts_wmi_event::clear_has_timegenerated() {
		_has_bits_[0] &= ~0x00000080u;
	}
	inline void ts_wmi_event::clear_timegenerated() {
		timegenerated_ = GOOGLE_ULONGLONG(0);
		clear_has_timegenerated();
	}
	inline ::google::protobuf::uint64 ts_wmi_event::timegenerated() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.TimeGenerated)
		return timegenerated_;
	}
	inline void ts_wmi_event::set_timegenerated(::google::protobuf::uint64 value) {
		set_has_timegenerated();
		timegenerated_ = value;
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.TimeGenerated)
	}

	// required uint64 TimeWritten = 9;
	inline bool ts_wmi_event::has_timewritten() const {
		return (_has_bits_[0] & 0x00000100u) != 0;
	}
	inline void ts_wmi_event::set_has_timewritten() {
		_has_bits_[0] |= 0x00000100u;
	}
	inline void ts_wmi_event::clear_has_timewritten() {
		_has_bits_[0] &= ~0x00000100u;
	}
	inline void ts_wmi_event::clear_timewritten() {
		timewritten_ = GOOGLE_ULONGLONG(0);
		clear_has_timewritten();
	}
	inline ::google::protobuf::uint64 ts_wmi_event::timewritten() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.TimeWritten)
		return timewritten_;
	}
	inline void ts_wmi_event::set_timewritten(::google::protobuf::uint64 value) {
		set_has_timewritten();
		timewritten_ = value;
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.TimeWritten)
	}

	// required string User = 10;
	inline bool ts_wmi_event::has_user() const {
		return (_has_bits_[0] & 0x00000200u) != 0;
	}
	inline void ts_wmi_event::set_has_user() {
		_has_bits_[0] |= 0x00000200u;
	}
	inline void ts_wmi_event::clear_has_user() {
		_has_bits_[0] &= ~0x00000200u;
	}
	inline void ts_wmi_event::clear_user() {
		user_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		clear_has_user();
	}
	inline const ::std::string& ts_wmi_event::user() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.User)
		return user_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	inline void ts_wmi_event::set_user(const ::std::string& value) {
		set_has_user();
		user_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.User)
	}
	inline void ts_wmi_event::set_user(const char* value) {
		set_has_user();
		user_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_char:ts_wmi_events.ts_wmi_event.User)
	}
	inline void ts_wmi_event::set_user(const char* value,
		size_t size) {
		set_has_user();
		user_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
			reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_pointer:ts_wmi_events.ts_wmi_event.User)
	}
	inline ::std::string* ts_wmi_event::mutable_user() {
		set_has_user();
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_event.User)
		return user_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	inline ::std::string* ts_wmi_event::release_user() {
		clear_has_user();
		return user_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	inline ::std::string* ts_wmi_event::unsafe_arena_release_user() {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		clear_has_user();
		return user_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			GetArenaNoVirtual());
	}
	inline void ts_wmi_event::set_allocated_user(::std::string* user) {
		if (user != NULL) {
			set_has_user();
		}
		else {
			clear_has_user();
		}
		user_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user,
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.User)
	}
	inline void ts_wmi_event::unsafe_arena_set_allocated_user(
		::std::string* user) {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		if (user != NULL) {
			set_has_user();
		}
		else {
			clear_has_user();
		}
		user_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			user, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.User)
	}

	// repeated .ts_wmi_events.ts_wmi_insertion_pair InsertionString = 11;
	inline int ts_wmi_event::insertionstring_size() const {
		return insertionstring_.size();
	}
	inline void ts_wmi_event::clear_insertionstring() {
		insertionstring_.Clear();
	}
	inline const ::ts_wmi_events::ts_wmi_insertion_pair& ts_wmi_event::insertionstring(int index) const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.InsertionString)
		return insertionstring_.Get(index);
	}
	inline ::ts_wmi_events::ts_wmi_insertion_pair* ts_wmi_event::mutable_insertionstring(int index) {
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_event.InsertionString)
		return insertionstring_.Mutable(index);
	}
	inline ::ts_wmi_events::ts_wmi_insertion_pair* ts_wmi_event::add_insertionstring() {
		// @@protoc_insertion_point(field_add:ts_wmi_events.ts_wmi_event.InsertionString)
		return insertionstring_.Add();
	}
	inline ::google::protobuf::RepeatedPtrField< ::ts_wmi_events::ts_wmi_insertion_pair >*
		ts_wmi_event::mutable_insertionstring() {
		// @@protoc_insertion_point(field_mutable_list:ts_wmi_events.ts_wmi_event.InsertionString)
		return &insertionstring_;
	}
	inline const ::google::protobuf::RepeatedPtrField< ::ts_wmi_events::ts_wmi_insertion_pair >&
		ts_wmi_event::insertionstring() const {
		// @@protoc_insertion_point(field_list:ts_wmi_events.ts_wmi_event.InsertionString)
		return insertionstring_;
	}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
	// -------------------------------------------------------------------


	// @@protoc_insertion_point(namespace_scope)

}  // namespace ts_wmi_events

   // @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ts_5fwmi_5fevent_2eproto__INCLUDED
