// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ts_fim_event.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ts_fim_event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ts_fim_events {

namespace {

const ::google::protobuf::Descriptor* ts_fim_event_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ts_fim_event_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_ts_5ffim_5fevent_2eproto() {
  protobuf_AddDesc_ts_5ffim_5fevent_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "ts_fim_event.proto");
  GOOGLE_CHECK(file != NULL);
  ts_fim_event_descriptor_ = file->message_type(0);
  static const int ts_fim_event_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, pid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, datetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, irp_major_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, irp_minor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, device_object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, file_object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, user_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, arg1_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, arg2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, arg3_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, arg4_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, arg5_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, arg6_),
  };
  ts_fim_event_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ts_fim_event_descriptor_,
      ts_fim_event::default_instance_,
      ts_fim_event_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, _has_bits_[0]),
      -1,
      -1,
      sizeof(ts_fim_event),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_fim_event, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_ts_5ffim_5fevent_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ts_fim_event_descriptor_, &ts_fim_event::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_ts_5ffim_5fevent_2eproto() {
  delete ts_fim_event::default_instance_;
  delete ts_fim_event_reflection_;
}

void protobuf_AddDesc_ts_5ffim_5fevent_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\022ts_fim_event.proto\022\rts_fim_events\"\357\001\n\014"
    "ts_fim_event\022\014\n\004name\030\001 \002(\t\022\013\n\003pid\030\002 \002(\005\022"
    "\020\n\010datetime\030\003 \002(\004\022\021\n\tirp_major\030\004 \002(\005\022\021\n\t"
    "irp_minor\030\005 \002(\005\022\025\n\rdevice_object\030\006 \002(\004\022\023"
    "\n\013file_object\030\007 \002(\004\022\014\n\004user\030\010 \001(\t\022\014\n\004arg"
    "1\030\t \001(\t\022\014\n\004arg2\030\n \001(\t\022\014\n\004arg3\030\013 \001(\t\022\014\n\004a"
    "rg4\030\014 \001(\t\022\014\n\004arg5\030\r \001(\t\022\014\n\004arg6\030\016 \001(\t", 277);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ts_fim_event.proto", &protobuf_RegisterTypes);
  ts_fim_event::default_instance_ = new ts_fim_event();
  ts_fim_event::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ts_5ffim_5fevent_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_ts_5ffim_5fevent_2eproto {
  StaticDescriptorInitializer_ts_5ffim_5fevent_2eproto() {
    protobuf_AddDesc_ts_5ffim_5fevent_2eproto();
  }
} static_descriptor_initializer_ts_5ffim_5fevent_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ts_fim_event::kNameFieldNumber;
const int ts_fim_event::kPidFieldNumber;
const int ts_fim_event::kDatetimeFieldNumber;
const int ts_fim_event::kIrpMajorFieldNumber;
const int ts_fim_event::kIrpMinorFieldNumber;
const int ts_fim_event::kDeviceObjectFieldNumber;
const int ts_fim_event::kFileObjectFieldNumber;
const int ts_fim_event::kUserFieldNumber;
const int ts_fim_event::kArg1FieldNumber;
const int ts_fim_event::kArg2FieldNumber;
const int ts_fim_event::kArg3FieldNumber;
const int ts_fim_event::kArg4FieldNumber;
const int ts_fim_event::kArg5FieldNumber;
const int ts_fim_event::kArg6FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ts_fim_event::ts_fim_event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ts_fim_events.ts_fim_event)
}

void ts_fim_event::InitAsDefaultInstance() {
}

ts_fim_event::ts_fim_event(const ts_fim_event& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ts_fim_events.ts_fim_event)
}

void ts_fim_event::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pid_ = 0;
  datetime_ = GOOGLE_ULONGLONG(0);
  irp_major_ = 0;
  irp_minor_ = 0;
  device_object_ = GOOGLE_ULONGLONG(0);
  file_object_ = GOOGLE_ULONGLONG(0);
  user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arg1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arg2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arg3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arg4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arg5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arg6_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ts_fim_event::~ts_fim_event() {
  // @@protoc_insertion_point(destructor:ts_fim_events.ts_fim_event)
  SharedDtor();
}

void ts_fim_event::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arg1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arg2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arg3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arg4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arg5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arg6_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ts_fim_event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ts_fim_event::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ts_fim_event_descriptor_;
}

const ts_fim_event& ts_fim_event::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_ts_5ffim_5fevent_2eproto();
  return *default_instance_;
}

ts_fim_event* ts_fim_event::default_instance_ = NULL;

ts_fim_event* ts_fim_event::New(::google::protobuf::Arena* arena) const {
  ts_fim_event* n = new ts_fim_event;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ts_fim_event::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ts_fim_event*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(datetime_, file_object_);
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    irp_minor_ = 0;
    if (has_user()) {
      user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  if (_has_bits_[8 / 32] & 16128u) {
    if (has_arg1()) {
      arg1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_arg2()) {
      arg2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_arg3()) {
      arg3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_arg4()) {
      arg4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_arg5()) {
      arg5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_arg6()) {
      arg6_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ts_fim_event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ts_fim_events.ts_fim_event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ts_fim_events.ts_fim_event.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_pid;
        break;
      }

      // required int32 pid = 2;
      case 2: {
        if (tag == 16) {
         parse_pid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &pid_)));
          set_has_pid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_datetime;
        break;
      }

      // required uint64 datetime = 3;
      case 3: {
        if (tag == 24) {
         parse_datetime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &datetime_)));
          set_has_datetime();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_irp_major;
        break;
      }

      // required int32 irp_major = 4;
      case 4: {
        if (tag == 32) {
         parse_irp_major:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &irp_major_)));
          set_has_irp_major();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_irp_minor;
        break;
      }

      // required int32 irp_minor = 5;
      case 5: {
        if (tag == 40) {
         parse_irp_minor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &irp_minor_)));
          set_has_irp_minor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_device_object;
        break;
      }

      // required uint64 device_object = 6;
      case 6: {
        if (tag == 48) {
         parse_device_object:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &device_object_)));
          set_has_device_object();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(56)) goto parse_file_object;
        break;
      }

      // required uint64 file_object = 7;
      case 7: {
        if (tag == 56) {
         parse_file_object:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &file_object_)));
          set_has_file_object();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_user;
        break;
      }

      // optional string user = 8;
      case 8: {
        if (tag == 66) {
         parse_user:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user().data(), this->user().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ts_fim_events.ts_fim_event.user");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_arg1;
        break;
      }

      // optional string arg1 = 9;
      case 9: {
        if (tag == 74) {
         parse_arg1:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_arg1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->arg1().data(), this->arg1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ts_fim_events.ts_fim_event.arg1");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_arg2;
        break;
      }

      // optional string arg2 = 10;
      case 10: {
        if (tag == 82) {
         parse_arg2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_arg2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->arg2().data(), this->arg2().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ts_fim_events.ts_fim_event.arg2");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_arg3;
        break;
      }

      // optional string arg3 = 11;
      case 11: {
        if (tag == 90) {
         parse_arg3:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_arg3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->arg3().data(), this->arg3().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ts_fim_events.ts_fim_event.arg3");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_arg4;
        break;
      }

      // optional string arg4 = 12;
      case 12: {
        if (tag == 98) {
         parse_arg4:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_arg4()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->arg4().data(), this->arg4().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ts_fim_events.ts_fim_event.arg4");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_arg5;
        break;
      }

      // optional string arg5 = 13;
      case 13: {
        if (tag == 106) {
         parse_arg5:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_arg5()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->arg5().data(), this->arg5().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ts_fim_events.ts_fim_event.arg5");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_arg6;
        break;
      }

      // optional string arg6 = 14;
      case 14: {
        if (tag == 114) {
         parse_arg6:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_arg6()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->arg6().data(), this->arg6().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ts_fim_events.ts_fim_event.arg6");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ts_fim_events.ts_fim_event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ts_fim_events.ts_fim_event)
  return false;
#undef DO_
}

void ts_fim_event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ts_fim_events.ts_fim_event)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required int32 pid = 2;
  if (has_pid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->pid(), output);
  }

  // required uint64 datetime = 3;
  if (has_datetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->datetime(), output);
  }

  // required int32 irp_major = 4;
  if (has_irp_major()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->irp_major(), output);
  }

  // required int32 irp_minor = 5;
  if (has_irp_minor()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->irp_minor(), output);
  }

  // required uint64 device_object = 6;
  if (has_device_object()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->device_object(), output);
  }

  // required uint64 file_object = 7;
  if (has_file_object()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->file_object(), output);
  }

  // optional string user = 8;
  if (has_user()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.user");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->user(), output);
  }

  // optional string arg1 = 9;
  if (has_arg1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arg1().data(), this->arg1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.arg1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->arg1(), output);
  }

  // optional string arg2 = 10;
  if (has_arg2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arg2().data(), this->arg2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.arg2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->arg2(), output);
  }

  // optional string arg3 = 11;
  if (has_arg3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arg3().data(), this->arg3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.arg3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->arg3(), output);
  }

  // optional string arg4 = 12;
  if (has_arg4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arg4().data(), this->arg4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.arg4");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->arg4(), output);
  }

  // optional string arg5 = 13;
  if (has_arg5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arg5().data(), this->arg5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.arg5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->arg5(), output);
  }

  // optional string arg6 = 14;
  if (has_arg6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arg6().data(), this->arg6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.arg6");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->arg6(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ts_fim_events.ts_fim_event)
}

::google::protobuf::uint8* ts_fim_event::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ts_fim_events.ts_fim_event)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required int32 pid = 2;
  if (has_pid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->pid(), target);
  }

  // required uint64 datetime = 3;
  if (has_datetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->datetime(), target);
  }

  // required int32 irp_major = 4;
  if (has_irp_major()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->irp_major(), target);
  }

  // required int32 irp_minor = 5;
  if (has_irp_minor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->irp_minor(), target);
  }

  // required uint64 device_object = 6;
  if (has_device_object()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->device_object(), target);
  }

  // required uint64 file_object = 7;
  if (has_file_object()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->file_object(), target);
  }

  // optional string user = 8;
  if (has_user()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user().data(), this->user().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.user");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->user(), target);
  }

  // optional string arg1 = 9;
  if (has_arg1()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arg1().data(), this->arg1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.arg1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->arg1(), target);
  }

  // optional string arg2 = 10;
  if (has_arg2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arg2().data(), this->arg2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.arg2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->arg2(), target);
  }

  // optional string arg3 = 11;
  if (has_arg3()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arg3().data(), this->arg3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.arg3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->arg3(), target);
  }

  // optional string arg4 = 12;
  if (has_arg4()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arg4().data(), this->arg4().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.arg4");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->arg4(), target);
  }

  // optional string arg5 = 13;
  if (has_arg5()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arg5().data(), this->arg5().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.arg5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->arg5(), target);
  }

  // optional string arg6 = 14;
  if (has_arg6()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->arg6().data(), this->arg6().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ts_fim_events.ts_fim_event.arg6");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->arg6(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ts_fim_events.ts_fim_event)
  return target;
}

int ts_fim_event::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_pid()) {
    // required int32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pid());
  }

  if (has_datetime()) {
    // required uint64 datetime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->datetime());
  }

  if (has_irp_major()) {
    // required int32 irp_major = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->irp_major());
  }

  if (has_irp_minor()) {
    // required int32 irp_minor = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->irp_minor());
  }

  if (has_device_object()) {
    // required uint64 device_object = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->device_object());
  }

  if (has_file_object()) {
    // required uint64 file_object = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->file_object());
  }

  return total_size;
}
int ts_fim_event::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000007f) ^ 0x0000007f) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required int32 pid = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->pid());

    // required uint64 datetime = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->datetime());

    // required int32 irp_major = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->irp_major());

    // required int32 irp_minor = 5;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->irp_minor());

    // required uint64 device_object = 6;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->device_object());

    // required uint64 file_object = 7;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->file_object());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional string user = 8;
  if (has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user());
  }

  if (_has_bits_[8 / 32] & 16128u) {
    // optional string arg1 = 9;
    if (has_arg1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->arg1());
    }

    // optional string arg2 = 10;
    if (has_arg2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->arg2());
    }

    // optional string arg3 = 11;
    if (has_arg3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->arg3());
    }

    // optional string arg4 = 12;
    if (has_arg4()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->arg4());
    }

    // optional string arg5 = 13;
    if (has_arg5()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->arg5());
    }

    // optional string arg6 = 14;
    if (has_arg6()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->arg6());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ts_fim_event::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ts_fim_event* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ts_fim_event>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ts_fim_event::MergeFrom(const ts_fim_event& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_pid()) {
      set_pid(from.pid());
    }
    if (from.has_datetime()) {
      set_datetime(from.datetime());
    }
    if (from.has_irp_major()) {
      set_irp_major(from.irp_major());
    }
    if (from.has_irp_minor()) {
      set_irp_minor(from.irp_minor());
    }
    if (from.has_device_object()) {
      set_device_object(from.device_object());
    }
    if (from.has_file_object()) {
      set_file_object(from.file_object());
    }
    if (from.has_user()) {
      set_has_user();
      user_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_);
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_arg1()) {
      set_has_arg1();
      arg1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arg1_);
    }
    if (from.has_arg2()) {
      set_has_arg2();
      arg2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arg2_);
    }
    if (from.has_arg3()) {
      set_has_arg3();
      arg3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arg3_);
    }
    if (from.has_arg4()) {
      set_has_arg4();
      arg4_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arg4_);
    }
    if (from.has_arg5()) {
      set_has_arg5();
      arg5_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arg5_);
    }
    if (from.has_arg6()) {
      set_has_arg6();
      arg6_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arg6_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ts_fim_event::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ts_fim_event::CopyFrom(const ts_fim_event& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ts_fim_event::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007f) != 0x0000007f) return false;

  return true;
}

void ts_fim_event::Swap(ts_fim_event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ts_fim_event::InternalSwap(ts_fim_event* other) {
  name_.Swap(&other->name_);
  std::swap(pid_, other->pid_);
  std::swap(datetime_, other->datetime_);
  std::swap(irp_major_, other->irp_major_);
  std::swap(irp_minor_, other->irp_minor_);
  std::swap(device_object_, other->device_object_);
  std::swap(file_object_, other->file_object_);
  user_.Swap(&other->user_);
  arg1_.Swap(&other->arg1_);
  arg2_.Swap(&other->arg2_);
  arg3_.Swap(&other->arg3_);
  arg4_.Swap(&other->arg4_);
  arg5_.Swap(&other->arg5_);
  arg6_.Swap(&other->arg6_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ts_fim_event::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ts_fim_event_descriptor_;
  metadata.reflection = ts_fim_event_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ts_fim_event

// required string name = 1;
bool ts_fim_event::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ts_fim_event::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ts_fim_event::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ts_fim_event::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& ts_fim_event::name() const {
  // @@protoc_insertion_point(field_get:ts_fim_events.ts_fim_event.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ts_fim_events.ts_fim_event.name)
}
 void ts_fim_event::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ts_fim_events.ts_fim_event.name)
}
 void ts_fim_event::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ts_fim_events.ts_fim_event.name)
}
 ::std::string* ts_fim_event::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:ts_fim_events.ts_fim_event.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ts_fim_event::release_name() {
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ts_fim_events.ts_fim_event.name)
}

// required int32 pid = 2;
bool ts_fim_event::has_pid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ts_fim_event::set_has_pid() {
  _has_bits_[0] |= 0x00000002u;
}
void ts_fim_event::clear_has_pid() {
  _has_bits_[0] &= ~0x00000002u;
}
void ts_fim_event::clear_pid() {
  pid_ = 0;
  clear_has_pid();
}
 ::google::protobuf::int32 ts_fim_event::pid() const {
  // @@protoc_insertion_point(field_get:ts_fim_events.ts_fim_event.pid)
  return pid_;
}
 void ts_fim_event::set_pid(::google::protobuf::int32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:ts_fim_events.ts_fim_event.pid)
}

// required uint64 datetime = 3;
bool ts_fim_event::has_datetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ts_fim_event::set_has_datetime() {
  _has_bits_[0] |= 0x00000004u;
}
void ts_fim_event::clear_has_datetime() {
  _has_bits_[0] &= ~0x00000004u;
}
void ts_fim_event::clear_datetime() {
  datetime_ = GOOGLE_ULONGLONG(0);
  clear_has_datetime();
}
 ::google::protobuf::uint64 ts_fim_event::datetime() const {
  // @@protoc_insertion_point(field_get:ts_fim_events.ts_fim_event.datetime)
  return datetime_;
}
 void ts_fim_event::set_datetime(::google::protobuf::uint64 value) {
  set_has_datetime();
  datetime_ = value;
  // @@protoc_insertion_point(field_set:ts_fim_events.ts_fim_event.datetime)
}

// required int32 irp_major = 4;
bool ts_fim_event::has_irp_major() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ts_fim_event::set_has_irp_major() {
  _has_bits_[0] |= 0x00000008u;
}
void ts_fim_event::clear_has_irp_major() {
  _has_bits_[0] &= ~0x00000008u;
}
void ts_fim_event::clear_irp_major() {
  irp_major_ = 0;
  clear_has_irp_major();
}
 ::google::protobuf::int32 ts_fim_event::irp_major() const {
  // @@protoc_insertion_point(field_get:ts_fim_events.ts_fim_event.irp_major)
  return irp_major_;
}
 void ts_fim_event::set_irp_major(::google::protobuf::int32 value) {
  set_has_irp_major();
  irp_major_ = value;
  // @@protoc_insertion_point(field_set:ts_fim_events.ts_fim_event.irp_major)
}

// required int32 irp_minor = 5;
bool ts_fim_event::has_irp_minor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ts_fim_event::set_has_irp_minor() {
  _has_bits_[0] |= 0x00000010u;
}
void ts_fim_event::clear_has_irp_minor() {
  _has_bits_[0] &= ~0x00000010u;
}
void ts_fim_event::clear_irp_minor() {
  irp_minor_ = 0;
  clear_has_irp_minor();
}
 ::google::protobuf::int32 ts_fim_event::irp_minor() const {
  // @@protoc_insertion_point(field_get:ts_fim_events.ts_fim_event.irp_minor)
  return irp_minor_;
}
 void ts_fim_event::set_irp_minor(::google::protobuf::int32 value) {
  set_has_irp_minor();
  irp_minor_ = value;
  // @@protoc_insertion_point(field_set:ts_fim_events.ts_fim_event.irp_minor)
}

// required uint64 device_object = 6;
bool ts_fim_event::has_device_object() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ts_fim_event::set_has_device_object() {
  _has_bits_[0] |= 0x00000020u;
}
void ts_fim_event::clear_has_device_object() {
  _has_bits_[0] &= ~0x00000020u;
}
void ts_fim_event::clear_device_object() {
  device_object_ = GOOGLE_ULONGLONG(0);
  clear_has_device_object();
}
 ::google::protobuf::uint64 ts_fim_event::device_object() const {
  // @@protoc_insertion_point(field_get:ts_fim_events.ts_fim_event.device_object)
  return device_object_;
}
 void ts_fim_event::set_device_object(::google::protobuf::uint64 value) {
  set_has_device_object();
  device_object_ = value;
  // @@protoc_insertion_point(field_set:ts_fim_events.ts_fim_event.device_object)
}

// required uint64 file_object = 7;
bool ts_fim_event::has_file_object() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ts_fim_event::set_has_file_object() {
  _has_bits_[0] |= 0x00000040u;
}
void ts_fim_event::clear_has_file_object() {
  _has_bits_[0] &= ~0x00000040u;
}
void ts_fim_event::clear_file_object() {
  file_object_ = GOOGLE_ULONGLONG(0);
  clear_has_file_object();
}
 ::google::protobuf::uint64 ts_fim_event::file_object() const {
  // @@protoc_insertion_point(field_get:ts_fim_events.ts_fim_event.file_object)
  return file_object_;
}
 void ts_fim_event::set_file_object(::google::protobuf::uint64 value) {
  set_has_file_object();
  file_object_ = value;
  // @@protoc_insertion_point(field_set:ts_fim_events.ts_fim_event.file_object)
}

// optional string user = 8;
bool ts_fim_event::has_user() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ts_fim_event::set_has_user() {
  _has_bits_[0] |= 0x00000080u;
}
void ts_fim_event::clear_has_user() {
  _has_bits_[0] &= ~0x00000080u;
}
void ts_fim_event::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user();
}
 const ::std::string& ts_fim_event::user() const {
  // @@protoc_insertion_point(field_get:ts_fim_events.ts_fim_event.user)
  return user_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_user(const ::std::string& value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ts_fim_events.ts_fim_event.user)
}
 void ts_fim_event::set_user(const char* value) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ts_fim_events.ts_fim_event.user)
}
 void ts_fim_event::set_user(const char* value, size_t size) {
  set_has_user();
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ts_fim_events.ts_fim_event.user)
}
 ::std::string* ts_fim_event::mutable_user() {
  set_has_user();
  // @@protoc_insertion_point(field_mutable:ts_fim_events.ts_fim_event.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ts_fim_event::release_user() {
  clear_has_user();
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    set_has_user();
  } else {
    clear_has_user();
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:ts_fim_events.ts_fim_event.user)
}

// optional string arg1 = 9;
bool ts_fim_event::has_arg1() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ts_fim_event::set_has_arg1() {
  _has_bits_[0] |= 0x00000100u;
}
void ts_fim_event::clear_has_arg1() {
  _has_bits_[0] &= ~0x00000100u;
}
void ts_fim_event::clear_arg1() {
  arg1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg1();
}
 const ::std::string& ts_fim_event::arg1() const {
  // @@protoc_insertion_point(field_get:ts_fim_events.ts_fim_event.arg1)
  return arg1_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_arg1(const ::std::string& value) {
  set_has_arg1();
  arg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ts_fim_events.ts_fim_event.arg1)
}
 void ts_fim_event::set_arg1(const char* value) {
  set_has_arg1();
  arg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ts_fim_events.ts_fim_event.arg1)
}
 void ts_fim_event::set_arg1(const char* value, size_t size) {
  set_has_arg1();
  arg1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ts_fim_events.ts_fim_event.arg1)
}
 ::std::string* ts_fim_event::mutable_arg1() {
  set_has_arg1();
  // @@protoc_insertion_point(field_mutable:ts_fim_events.ts_fim_event.arg1)
  return arg1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ts_fim_event::release_arg1() {
  clear_has_arg1();
  return arg1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_allocated_arg1(::std::string* arg1) {
  if (arg1 != NULL) {
    set_has_arg1();
  } else {
    clear_has_arg1();
  }
  arg1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg1);
  // @@protoc_insertion_point(field_set_allocated:ts_fim_events.ts_fim_event.arg1)
}

// optional string arg2 = 10;
bool ts_fim_event::has_arg2() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void ts_fim_event::set_has_arg2() {
  _has_bits_[0] |= 0x00000200u;
}
void ts_fim_event::clear_has_arg2() {
  _has_bits_[0] &= ~0x00000200u;
}
void ts_fim_event::clear_arg2() {
  arg2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg2();
}
 const ::std::string& ts_fim_event::arg2() const {
  // @@protoc_insertion_point(field_get:ts_fim_events.ts_fim_event.arg2)
  return arg2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_arg2(const ::std::string& value) {
  set_has_arg2();
  arg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ts_fim_events.ts_fim_event.arg2)
}
 void ts_fim_event::set_arg2(const char* value) {
  set_has_arg2();
  arg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ts_fim_events.ts_fim_event.arg2)
}
 void ts_fim_event::set_arg2(const char* value, size_t size) {
  set_has_arg2();
  arg2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ts_fim_events.ts_fim_event.arg2)
}
 ::std::string* ts_fim_event::mutable_arg2() {
  set_has_arg2();
  // @@protoc_insertion_point(field_mutable:ts_fim_events.ts_fim_event.arg2)
  return arg2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ts_fim_event::release_arg2() {
  clear_has_arg2();
  return arg2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_allocated_arg2(::std::string* arg2) {
  if (arg2 != NULL) {
    set_has_arg2();
  } else {
    clear_has_arg2();
  }
  arg2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg2);
  // @@protoc_insertion_point(field_set_allocated:ts_fim_events.ts_fim_event.arg2)
}

// optional string arg3 = 11;
bool ts_fim_event::has_arg3() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void ts_fim_event::set_has_arg3() {
  _has_bits_[0] |= 0x00000400u;
}
void ts_fim_event::clear_has_arg3() {
  _has_bits_[0] &= ~0x00000400u;
}
void ts_fim_event::clear_arg3() {
  arg3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg3();
}
 const ::std::string& ts_fim_event::arg3() const {
  // @@protoc_insertion_point(field_get:ts_fim_events.ts_fim_event.arg3)
  return arg3_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_arg3(const ::std::string& value) {
  set_has_arg3();
  arg3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ts_fim_events.ts_fim_event.arg3)
}
 void ts_fim_event::set_arg3(const char* value) {
  set_has_arg3();
  arg3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ts_fim_events.ts_fim_event.arg3)
}
 void ts_fim_event::set_arg3(const char* value, size_t size) {
  set_has_arg3();
  arg3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ts_fim_events.ts_fim_event.arg3)
}
 ::std::string* ts_fim_event::mutable_arg3() {
  set_has_arg3();
  // @@protoc_insertion_point(field_mutable:ts_fim_events.ts_fim_event.arg3)
  return arg3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ts_fim_event::release_arg3() {
  clear_has_arg3();
  return arg3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_allocated_arg3(::std::string* arg3) {
  if (arg3 != NULL) {
    set_has_arg3();
  } else {
    clear_has_arg3();
  }
  arg3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg3);
  // @@protoc_insertion_point(field_set_allocated:ts_fim_events.ts_fim_event.arg3)
}

// optional string arg4 = 12;
bool ts_fim_event::has_arg4() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void ts_fim_event::set_has_arg4() {
  _has_bits_[0] |= 0x00000800u;
}
void ts_fim_event::clear_has_arg4() {
  _has_bits_[0] &= ~0x00000800u;
}
void ts_fim_event::clear_arg4() {
  arg4_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg4();
}
 const ::std::string& ts_fim_event::arg4() const {
  // @@protoc_insertion_point(field_get:ts_fim_events.ts_fim_event.arg4)
  return arg4_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_arg4(const ::std::string& value) {
  set_has_arg4();
  arg4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ts_fim_events.ts_fim_event.arg4)
}
 void ts_fim_event::set_arg4(const char* value) {
  set_has_arg4();
  arg4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ts_fim_events.ts_fim_event.arg4)
}
 void ts_fim_event::set_arg4(const char* value, size_t size) {
  set_has_arg4();
  arg4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ts_fim_events.ts_fim_event.arg4)
}
 ::std::string* ts_fim_event::mutable_arg4() {
  set_has_arg4();
  // @@protoc_insertion_point(field_mutable:ts_fim_events.ts_fim_event.arg4)
  return arg4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ts_fim_event::release_arg4() {
  clear_has_arg4();
  return arg4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_allocated_arg4(::std::string* arg4) {
  if (arg4 != NULL) {
    set_has_arg4();
  } else {
    clear_has_arg4();
  }
  arg4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg4);
  // @@protoc_insertion_point(field_set_allocated:ts_fim_events.ts_fim_event.arg4)
}

// optional string arg5 = 13;
bool ts_fim_event::has_arg5() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void ts_fim_event::set_has_arg5() {
  _has_bits_[0] |= 0x00001000u;
}
void ts_fim_event::clear_has_arg5() {
  _has_bits_[0] &= ~0x00001000u;
}
void ts_fim_event::clear_arg5() {
  arg5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg5();
}
 const ::std::string& ts_fim_event::arg5() const {
  // @@protoc_insertion_point(field_get:ts_fim_events.ts_fim_event.arg5)
  return arg5_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_arg5(const ::std::string& value) {
  set_has_arg5();
  arg5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ts_fim_events.ts_fim_event.arg5)
}
 void ts_fim_event::set_arg5(const char* value) {
  set_has_arg5();
  arg5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ts_fim_events.ts_fim_event.arg5)
}
 void ts_fim_event::set_arg5(const char* value, size_t size) {
  set_has_arg5();
  arg5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ts_fim_events.ts_fim_event.arg5)
}
 ::std::string* ts_fim_event::mutable_arg5() {
  set_has_arg5();
  // @@protoc_insertion_point(field_mutable:ts_fim_events.ts_fim_event.arg5)
  return arg5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ts_fim_event::release_arg5() {
  clear_has_arg5();
  return arg5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_allocated_arg5(::std::string* arg5) {
  if (arg5 != NULL) {
    set_has_arg5();
  } else {
    clear_has_arg5();
  }
  arg5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg5);
  // @@protoc_insertion_point(field_set_allocated:ts_fim_events.ts_fim_event.arg5)
}

// optional string arg6 = 14;
bool ts_fim_event::has_arg6() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void ts_fim_event::set_has_arg6() {
  _has_bits_[0] |= 0x00002000u;
}
void ts_fim_event::clear_has_arg6() {
  _has_bits_[0] &= ~0x00002000u;
}
void ts_fim_event::clear_arg6() {
  arg6_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_arg6();
}
 const ::std::string& ts_fim_event::arg6() const {
  // @@protoc_insertion_point(field_get:ts_fim_events.ts_fim_event.arg6)
  return arg6_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_arg6(const ::std::string& value) {
  set_has_arg6();
  arg6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ts_fim_events.ts_fim_event.arg6)
}
 void ts_fim_event::set_arg6(const char* value) {
  set_has_arg6();
  arg6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ts_fim_events.ts_fim_event.arg6)
}
 void ts_fim_event::set_arg6(const char* value, size_t size) {
  set_has_arg6();
  arg6_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ts_fim_events.ts_fim_event.arg6)
}
 ::std::string* ts_fim_event::mutable_arg6() {
  set_has_arg6();
  // @@protoc_insertion_point(field_mutable:ts_fim_events.ts_fim_event.arg6)
  return arg6_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ts_fim_event::release_arg6() {
  clear_has_arg6();
  return arg6_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ts_fim_event::set_allocated_arg6(::std::string* arg6) {
  if (arg6 != NULL) {
    set_has_arg6();
  } else {
    clear_has_arg6();
  }
  arg6_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arg6);
  // @@protoc_insertion_point(field_set_allocated:ts_fim_events.ts_fim_event.arg6)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace ts_fim_events

// @@protoc_insertion_point(global_scope)
