// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ts_wmi_event.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "ts_wmi_event.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ts_wmi_events {

	namespace {

		const ::google::protobuf::Descriptor* ts_wmi_insertion_pair_descriptor_ = NULL;
		const ::google::protobuf::internal::GeneratedMessageReflection*
			ts_wmi_insertion_pair_reflection_ = NULL;
		const ::google::protobuf::Descriptor* ts_wmi_event_descriptor_ = NULL;
		const ::google::protobuf::internal::GeneratedMessageReflection*
			ts_wmi_event_reflection_ = NULL;

	}  // namespace


	void protobuf_AssignDesc_ts_5fwmi_5fevent_2eproto() {
		protobuf_AddDesc_ts_5fwmi_5fevent_2eproto();
		const ::google::protobuf::FileDescriptor* file =
			::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
				"ts_wmi_event.proto");
		GOOGLE_CHECK(file != NULL);
		ts_wmi_insertion_pair_descriptor_ = file->message_type(0);
		static const int ts_wmi_insertion_pair_offsets_[2] = {
			GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_insertion_pair, key_),
			GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_insertion_pair, value_),
		};
		ts_wmi_insertion_pair_reflection_ =
			::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
				ts_wmi_insertion_pair_descriptor_,
				ts_wmi_insertion_pair::default_instance_,
				ts_wmi_insertion_pair_offsets_,
				GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_insertion_pair, _has_bits_[0]),
				-1,
				-1,
				sizeof(ts_wmi_insertion_pair),
				GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_insertion_pair, _internal_metadata_),
				-1);
		ts_wmi_event_descriptor_ = file->message_type(1);
		static const int ts_wmi_event_offsets_[11] = {
			GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_event, categorystring_),
			GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_event, computername_),
			GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_event, eventidentifier_),
			GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_event, eventtype_),
			GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_event, logfile_),
			GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_event, recordnumber_),
			GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_event, sourcename_),
			GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_event, timegenerated_),
			GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_event, timewritten_),
			GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_event, user_),
			GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_event, insertionstring_),
		};
		ts_wmi_event_reflection_ =
			::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
				ts_wmi_event_descriptor_,
				ts_wmi_event::default_instance_,
				ts_wmi_event_offsets_,
				GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_event, _has_bits_[0]),
				-1,
				-1,
				sizeof(ts_wmi_event),
				GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ts_wmi_event, _internal_metadata_),
				-1);
	}

	namespace {

		GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
		inline void protobuf_AssignDescriptorsOnce() {
			::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
				&protobuf_AssignDesc_ts_5fwmi_5fevent_2eproto);
		}

		void protobuf_RegisterTypes(const ::std::string&) {
			protobuf_AssignDescriptorsOnce();
			::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
				ts_wmi_insertion_pair_descriptor_, &ts_wmi_insertion_pair::default_instance());
			::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
				ts_wmi_event_descriptor_, &ts_wmi_event::default_instance());
		}

	}  // namespace

	void protobuf_ShutdownFile_ts_5fwmi_5fevent_2eproto() {
		delete ts_wmi_insertion_pair::default_instance_;
		delete ts_wmi_insertion_pair_reflection_;
		delete ts_wmi_event::default_instance_;
		delete ts_wmi_event_reflection_;
	}

	void protobuf_AddDesc_ts_5fwmi_5fevent_2eproto() {
		static bool already_here = false;
		if (already_here) return;
		already_here = true;
		GOOGLE_PROTOBUF_VERIFY_VERSION;

		::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
			"\n\022ts_wmi_event.proto\022\rts_wmi_events\"3\n\025t"
			"s_wmi_insertion_pair\022\013\n\003key\030\001 \002(\t\022\r\n\005val"
			"ue\030\002 \002(\t\"\234\002\n\014ts_wmi_event\022\026\n\016CategoryStr"
			"ing\030\001 \002(\t\022\024\n\014ComputerName\030\002 \002(\t\022\027\n\017Event"
			"Identifier\030\003 \002(\r\022\021\n\tEventType\030\004 \002(\r\022\017\n\007L"
			"ogfile\030\005 \002(\t\022\024\n\014RecordNumber\030\006 \002(\r\022\022\n\nSo"
			"urceName\030\007 \002(\t\022\025\n\rTimeGenerated\030\010 \002(\004\022\023\n"
			"\013TimeWritten\030\t \002(\004\022\014\n\004User\030\n \002(\t\022=\n\017Inse"
			"rtionString\030\013 \003(\0132$.ts_wmi_events.ts_wmi"
			"_insertion_pairB\005H\001\370\001\001", 382);
		::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
			"ts_wmi_event.proto", &protobuf_RegisterTypes);
		ts_wmi_insertion_pair::default_instance_ = new ts_wmi_insertion_pair();
		ts_wmi_event::default_instance_ = new ts_wmi_event();
		ts_wmi_insertion_pair::default_instance_->InitAsDefaultInstance();
		ts_wmi_event::default_instance_->InitAsDefaultInstance();
		::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_ts_5fwmi_5fevent_2eproto);
	}

	// Force AddDescriptors() to be called at static initialization time.
	struct StaticDescriptorInitializer_ts_5fwmi_5fevent_2eproto {
		StaticDescriptorInitializer_ts_5fwmi_5fevent_2eproto() {
			protobuf_AddDesc_ts_5fwmi_5fevent_2eproto();
		}
	} static_descriptor_initializer_ts_5fwmi_5fevent_2eproto_;

	namespace {

		static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
		static void MergeFromFail(int line) {
			GOOGLE_CHECK(false) << __FILE__ << ":" << line;
		}

	}  // namespace


	   // ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int ts_wmi_insertion_pair::kKeyFieldNumber;
	const int ts_wmi_insertion_pair::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	ts_wmi_insertion_pair::ts_wmi_insertion_pair()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		SharedCtor();
		// @@protoc_insertion_point(constructor:ts_wmi_events.ts_wmi_insertion_pair)
	}

	ts_wmi_insertion_pair::ts_wmi_insertion_pair(::google::protobuf::Arena* arena)
		: ::google::protobuf::Message(),
		_internal_metadata_(arena) {
		SharedCtor();
		RegisterArenaDtor(arena);
		// @@protoc_insertion_point(arena_constructor:ts_wmi_events.ts_wmi_insertion_pair)
	}

	void ts_wmi_insertion_pair::InitAsDefaultInstance() {
	}

	ts_wmi_insertion_pair::ts_wmi_insertion_pair(const ts_wmi_insertion_pair& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL) {
		SharedCtor();
		MergeFrom(from);
		// @@protoc_insertion_point(copy_constructor:ts_wmi_events.ts_wmi_insertion_pair)
	}

	void ts_wmi_insertion_pair::SharedCtor() {
		::google::protobuf::internal::GetEmptyString();
		_cached_size_ = 0;
		key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		::memset(_has_bits_, 0, sizeof(_has_bits_));
	}

	ts_wmi_insertion_pair::~ts_wmi_insertion_pair() {
		// @@protoc_insertion_point(destructor:ts_wmi_events.ts_wmi_insertion_pair)
		SharedDtor();
	}

	void ts_wmi_insertion_pair::SharedDtor() {
		if (GetArenaNoVirtual() != NULL) {
			return;
		}

		key_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		value_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		if (this != default_instance_) {
		}
	}

	void ts_wmi_insertion_pair::ArenaDtor(void* object) {
		ts_wmi_insertion_pair* _this = reinterpret_cast< ts_wmi_insertion_pair* >(object);
		(void)_this;
	}
	void ts_wmi_insertion_pair::RegisterArenaDtor(::google::protobuf::Arena* arena) {
	}
	void ts_wmi_insertion_pair::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* ts_wmi_insertion_pair::descriptor() {
		protobuf_AssignDescriptorsOnce();
		return ts_wmi_insertion_pair_descriptor_;
	}

	const ts_wmi_insertion_pair& ts_wmi_insertion_pair::default_instance() {
		if (default_instance_ == NULL) protobuf_AddDesc_ts_5fwmi_5fevent_2eproto();
		return *default_instance_;
	}

	ts_wmi_insertion_pair* ts_wmi_insertion_pair::default_instance_ = NULL;

	ts_wmi_insertion_pair* ts_wmi_insertion_pair::New(::google::protobuf::Arena* arena) const {
		return ::google::protobuf::Arena::CreateMessage<ts_wmi_insertion_pair>(arena);
	}

	void ts_wmi_insertion_pair::Clear() {
		if (_has_bits_[0 / 32] & 3u) {
			if (has_key()) {
				key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
			}
			if (has_value()) {
				value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
			}
		}
		::memset(_has_bits_, 0, sizeof(_has_bits_));
		if (_internal_metadata_.have_unknown_fields()) {
			mutable_unknown_fields()->Clear();
		}
	}

	bool ts_wmi_insertion_pair::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:ts_wmi_events.ts_wmi_insertion_pair)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// required string key = 1;
			case 1: {
				if (tag == 10) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->mutable_key()));
					::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
						this->key().data(), this->key().length(),
						::google::protobuf::internal::WireFormat::PARSE,
						"ts_wmi_events.ts_wmi_insertion_pair.key");
				}
				else {
					goto handle_unusual;
				}
				if (input->ExpectTag(18)) goto parse_value;
				break;
			}

					// required string value = 2;
			case 2: {
				if (tag == 18) {
				parse_value:
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->mutable_value()));
					::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
						this->value().data(), this->value().length(),
						::google::protobuf::internal::WireFormat::PARSE,
						"ts_wmi_events.ts_wmi_insertion_pair.value");
				}
				else {
					goto handle_unusual;
				}
				if (input->ExpectAtEnd()) goto success;
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0 ||
					::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
					::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:ts_wmi_events.ts_wmi_insertion_pair)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:ts_wmi_events.ts_wmi_insertion_pair)
		return false;
#undef DO_
	}

	void ts_wmi_insertion_pair::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:ts_wmi_events.ts_wmi_insertion_pair)
		// required string key = 1;
		if (has_key()) {
			::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
				this->key().data(), this->key().length(),
				::google::protobuf::internal::WireFormat::SERIALIZE,
				"ts_wmi_events.ts_wmi_insertion_pair.key");
			::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
				1, this->key(), output);
		}

		// required string value = 2;
		if (has_value()) {
			::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
				this->value().data(), this->value().length(),
				::google::protobuf::internal::WireFormat::SERIALIZE,
				"ts_wmi_events.ts_wmi_insertion_pair.value");
			::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
				2, this->value(), output);
		}

		if (_internal_metadata_.have_unknown_fields()) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				unknown_fields(), output);
		}
		// @@protoc_insertion_point(serialize_end:ts_wmi_events.ts_wmi_insertion_pair)
	}

	::google::protobuf::uint8* ts_wmi_insertion_pair::SerializeWithCachedSizesToArray(
		::google::protobuf::uint8* target) const {
		// @@protoc_insertion_point(serialize_to_array_start:ts_wmi_events.ts_wmi_insertion_pair)
		// required string key = 1;
		if (has_key()) {
			::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
				this->key().data(), this->key().length(),
				::google::protobuf::internal::WireFormat::SERIALIZE,
				"ts_wmi_events.ts_wmi_insertion_pair.key");
			target =
				::google::protobuf::internal::WireFormatLite::WriteStringToArray(
					1, this->key(), target);
		}

		// required string value = 2;
		if (has_value()) {
			::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
				this->value().data(), this->value().length(),
				::google::protobuf::internal::WireFormat::SERIALIZE,
				"ts_wmi_events.ts_wmi_insertion_pair.value");
			target =
				::google::protobuf::internal::WireFormatLite::WriteStringToArray(
					2, this->value(), target);
		}

		if (_internal_metadata_.have_unknown_fields()) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				unknown_fields(), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:ts_wmi_events.ts_wmi_insertion_pair)
		return target;
	}

	int ts_wmi_insertion_pair::RequiredFieldsByteSizeFallback() const {
		int total_size = 0;

		if (has_key()) {
			// required string key = 1;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->key());
		}

		if (has_value()) {
			// required string value = 2;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->value());
		}

		return total_size;
	}
	int ts_wmi_insertion_pair::ByteSize() const {
		int total_size = 0;

		if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
																 // required string key = 1;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->key());

			// required string value = 2;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->value());

		}
		else {
			total_size += RequiredFieldsByteSizeFallback();
		}
		if (_internal_metadata_.have_unknown_fields()) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					unknown_fields());
		}
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = total_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void ts_wmi_insertion_pair::MergeFrom(const ::google::protobuf::Message& from) {
		if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
		const ts_wmi_insertion_pair* source =
			::google::protobuf::internal::DynamicCastToGenerated<const ts_wmi_insertion_pair>(
				&from);
		if (source == NULL) {
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			MergeFrom(*source);
		}
	}

	void ts_wmi_insertion_pair::MergeFrom(const ts_wmi_insertion_pair& from) {
		if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
		if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
			if (from.has_key()) {
				set_key(from.key());
			}
			if (from.has_value()) {
				set_value(from.value());
			}
		}
		if (from._internal_metadata_.have_unknown_fields()) {
			mutable_unknown_fields()->MergeFrom(from.unknown_fields());
		}
	}

	void ts_wmi_insertion_pair::CopyFrom(const ::google::protobuf::Message& from) {
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void ts_wmi_insertion_pair::CopyFrom(const ts_wmi_insertion_pair& from) {
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool ts_wmi_insertion_pair::IsInitialized() const {
		if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

		return true;
	}

	void ts_wmi_insertion_pair::Swap(ts_wmi_insertion_pair* other) {
		if (other == this) return;
		if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
			InternalSwap(other);
		}
		else {
			ts_wmi_insertion_pair temp;
			temp.MergeFrom(*this);
			CopyFrom(*other);
			other->CopyFrom(temp);
		}
	}
	void ts_wmi_insertion_pair::UnsafeArenaSwap(ts_wmi_insertion_pair* other) {
		if (other == this) return;
		GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
		InternalSwap(other);
	}
	void ts_wmi_insertion_pair::InternalSwap(ts_wmi_insertion_pair* other) {
		key_.Swap(&other->key_);
		value_.Swap(&other->value_);
		std::swap(_has_bits_[0], other->_has_bits_[0]);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		std::swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata ts_wmi_insertion_pair::GetMetadata() const {
		protobuf_AssignDescriptorsOnce();
		::google::protobuf::Metadata metadata;
		metadata.descriptor = ts_wmi_insertion_pair_descriptor_;
		metadata.reflection = ts_wmi_insertion_pair_reflection_;
		return metadata;
	}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
	// ts_wmi_insertion_pair

	// required string key = 1;
	bool ts_wmi_insertion_pair::has_key() const {
		return (_has_bits_[0] & 0x00000001u) != 0;
	}
	void ts_wmi_insertion_pair::set_has_key() {
		_has_bits_[0] |= 0x00000001u;
	}
	void ts_wmi_insertion_pair::clear_has_key() {
		_has_bits_[0] &= ~0x00000001u;
	}
	void ts_wmi_insertion_pair::clear_key() {
		key_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		clear_has_key();
	}
	const ::std::string& ts_wmi_insertion_pair::key() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_insertion_pair.key)
		return key_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	void ts_wmi_insertion_pair::set_key(const ::std::string& value) {
		set_has_key();
		key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_insertion_pair.key)
	}
	void ts_wmi_insertion_pair::set_key(const char* value) {
		set_has_key();
		key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_char:ts_wmi_events.ts_wmi_insertion_pair.key)
	}
	void ts_wmi_insertion_pair::set_key(const char* value,
		size_t size) {
		set_has_key();
		key_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
			reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_pointer:ts_wmi_events.ts_wmi_insertion_pair.key)
	}
	::std::string* ts_wmi_insertion_pair::mutable_key() {
		set_has_key();
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_insertion_pair.key)
		return key_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	::std::string* ts_wmi_insertion_pair::release_key() {
		clear_has_key();
		return key_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	::std::string* ts_wmi_insertion_pair::unsafe_arena_release_key() {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		clear_has_key();
		return key_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			GetArenaNoVirtual());
	}
	void ts_wmi_insertion_pair::set_allocated_key(::std::string* key) {
		if (key != NULL) {
			set_has_key();
		}
		else {
			clear_has_key();
		}
		key_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key,
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_insertion_pair.key)
	}
	void ts_wmi_insertion_pair::unsafe_arena_set_allocated_key(
		::std::string* key) {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		if (key != NULL) {
			set_has_key();
		}
		else {
			clear_has_key();
		}
		key_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			key, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_insertion_pair.key)
	}

	// required string value = 2;
	bool ts_wmi_insertion_pair::has_value() const {
		return (_has_bits_[0] & 0x00000002u) != 0;
	}
	void ts_wmi_insertion_pair::set_has_value() {
		_has_bits_[0] |= 0x00000002u;
	}
	void ts_wmi_insertion_pair::clear_has_value() {
		_has_bits_[0] &= ~0x00000002u;
	}
	void ts_wmi_insertion_pair::clear_value() {
		value_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		clear_has_value();
	}
	const ::std::string& ts_wmi_insertion_pair::value() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_insertion_pair.value)
		return value_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	void ts_wmi_insertion_pair::set_value(const ::std::string& value) {
		set_has_value();
		value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_insertion_pair.value)
	}
	void ts_wmi_insertion_pair::set_value(const char* value) {
		set_has_value();
		value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_char:ts_wmi_events.ts_wmi_insertion_pair.value)
	}
	void ts_wmi_insertion_pair::set_value(const char* value,
		size_t size) {
		set_has_value();
		value_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
			reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_pointer:ts_wmi_events.ts_wmi_insertion_pair.value)
	}
	::std::string* ts_wmi_insertion_pair::mutable_value() {
		set_has_value();
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_insertion_pair.value)
		return value_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	::std::string* ts_wmi_insertion_pair::release_value() {
		clear_has_value();
		return value_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	::std::string* ts_wmi_insertion_pair::unsafe_arena_release_value() {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		clear_has_value();
		return value_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			GetArenaNoVirtual());
	}
	void ts_wmi_insertion_pair::set_allocated_value(::std::string* value) {
		if (value != NULL) {
			set_has_value();
		}
		else {
			clear_has_value();
		}
		value_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value,
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_insertion_pair.value)
	}
	void ts_wmi_insertion_pair::unsafe_arena_set_allocated_value(
		::std::string* value) {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		if (value != NULL) {
			set_has_value();
		}
		else {
			clear_has_value();
		}
		value_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_insertion_pair.value)
	}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

	// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
	const int ts_wmi_event::kCategoryStringFieldNumber;
	const int ts_wmi_event::kComputerNameFieldNumber;
	const int ts_wmi_event::kEventIdentifierFieldNumber;
	const int ts_wmi_event::kEventTypeFieldNumber;
	const int ts_wmi_event::kLogfileFieldNumber;
	const int ts_wmi_event::kRecordNumberFieldNumber;
	const int ts_wmi_event::kSourceNameFieldNumber;
	const int ts_wmi_event::kTimeGeneratedFieldNumber;
	const int ts_wmi_event::kTimeWrittenFieldNumber;
	const int ts_wmi_event::kUserFieldNumber;
	const int ts_wmi_event::kInsertionStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

	ts_wmi_event::ts_wmi_event()
		: ::google::protobuf::Message(), _internal_metadata_(NULL) {
		SharedCtor();
		// @@protoc_insertion_point(constructor:ts_wmi_events.ts_wmi_event)
	}

	ts_wmi_event::ts_wmi_event(::google::protobuf::Arena* arena)
		: ::google::protobuf::Message(),
		_internal_metadata_(arena),
		insertionstring_(arena) {
		SharedCtor();
		RegisterArenaDtor(arena);
		// @@protoc_insertion_point(arena_constructor:ts_wmi_events.ts_wmi_event)
	}

	void ts_wmi_event::InitAsDefaultInstance() {
	}

	ts_wmi_event::ts_wmi_event(const ts_wmi_event& from)
		: ::google::protobuf::Message(),
		_internal_metadata_(NULL) {
		SharedCtor();
		MergeFrom(from);
		// @@protoc_insertion_point(copy_constructor:ts_wmi_events.ts_wmi_event)
	}

	void ts_wmi_event::SharedCtor() {
		::google::protobuf::internal::GetEmptyString();
		_cached_size_ = 0;
		categorystring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		computername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		eventidentifier_ = 0u;
		eventtype_ = 0u;
		logfile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		recordnumber_ = 0u;
		sourcename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		timegenerated_ = GOOGLE_ULONGLONG(0);
		timewritten_ = GOOGLE_ULONGLONG(0);
		user_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
		::memset(_has_bits_, 0, sizeof(_has_bits_));
	}

	ts_wmi_event::~ts_wmi_event() {
		// @@protoc_insertion_point(destructor:ts_wmi_events.ts_wmi_event)
		SharedDtor();
	}

	void ts_wmi_event::SharedDtor() {
		if (GetArenaNoVirtual() != NULL) {
			return;
		}

		categorystring_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		computername_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		logfile_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		sourcename_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		user_.Destroy(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		if (this != default_instance_) {
		}
	}

	void ts_wmi_event::ArenaDtor(void* object) {
		ts_wmi_event* _this = reinterpret_cast< ts_wmi_event* >(object);
		(void)_this;
	}
	void ts_wmi_event::RegisterArenaDtor(::google::protobuf::Arena* arena) {
	}
	void ts_wmi_event::SetCachedSize(int size) const {
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
	}
	const ::google::protobuf::Descriptor* ts_wmi_event::descriptor() {
		protobuf_AssignDescriptorsOnce();
		return ts_wmi_event_descriptor_;
	}

	const ts_wmi_event& ts_wmi_event::default_instance() {
		if (default_instance_ == NULL) protobuf_AddDesc_ts_5fwmi_5fevent_2eproto();
		return *default_instance_;
	}

	ts_wmi_event* ts_wmi_event::default_instance_ = NULL;

	ts_wmi_event* ts_wmi_event::New(::google::protobuf::Arena* arena) const {
		return ::google::protobuf::Arena::CreateMessage<ts_wmi_event>(arena);
	}

	void ts_wmi_event::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ts_wmi_event*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

		if (_has_bits_[0 / 32] & 255u) {
			ZR_(eventidentifier_, eventtype_);
			if (has_categorystring()) {
				categorystring_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
			}
			if (has_computername()) {
				computername_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
			}
			if (has_logfile()) {
				logfile_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
			}
			recordnumber_ = 0u;
			if (has_sourcename()) {
				sourcename_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
			}
			timegenerated_ = GOOGLE_ULONGLONG(0);
		}
		if (_has_bits_[8 / 32] & 768u) {
			timewritten_ = GOOGLE_ULONGLONG(0);
			if (has_user()) {
				user_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
			}
		}

#undef ZR_HELPER_
#undef ZR_

		insertionstring_.Clear();
		::memset(_has_bits_, 0, sizeof(_has_bits_));
		if (_internal_metadata_.have_unknown_fields()) {
			mutable_unknown_fields()->Clear();
		}
	}

	bool ts_wmi_event::MergePartialFromCodedStream(
		::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
		::google::protobuf::uint32 tag;
		// @@protoc_insertion_point(parse_start:ts_wmi_events.ts_wmi_event)
		for (;;) {
			::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
			tag = p.first;
			if (!p.second) goto handle_unusual;
			switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
				// required string CategoryString = 1;
			case 1: {
				if (tag == 10) {
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->mutable_categorystring()));
					::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
						this->categorystring().data(), this->categorystring().length(),
						::google::protobuf::internal::WireFormat::PARSE,
						"ts_wmi_events.ts_wmi_event.CategoryString");
				}
				else {
					goto handle_unusual;
				}
				if (input->ExpectTag(18)) goto parse_ComputerName;
				break;
			}

					// required string ComputerName = 2;
			case 2: {
				if (tag == 18) {
				parse_ComputerName:
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->mutable_computername()));
					::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
						this->computername().data(), this->computername().length(),
						::google::protobuf::internal::WireFormat::PARSE,
						"ts_wmi_events.ts_wmi_event.ComputerName");
				}
				else {
					goto handle_unusual;
				}
				if (input->ExpectTag(24)) goto parse_EventIdentifier;
				break;
			}

					// required uint32 EventIdentifier = 3;
			case 3: {
				if (tag == 24) {
				parse_EventIdentifier:
					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
							input, &eventidentifier_)));
					set_has_eventidentifier();
				}
				else {
					goto handle_unusual;
				}
				if (input->ExpectTag(32)) goto parse_EventType;
				break;
			}

					// required uint32 EventType = 4;
			case 4: {
				if (tag == 32) {
				parse_EventType:
					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
							input, &eventtype_)));
					set_has_eventtype();
				}
				else {
					goto handle_unusual;
				}
				if (input->ExpectTag(42)) goto parse_Logfile;
				break;
			}

					// required string Logfile = 5;
			case 5: {
				if (tag == 42) {
				parse_Logfile:
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->mutable_logfile()));
					::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
						this->logfile().data(), this->logfile().length(),
						::google::protobuf::internal::WireFormat::PARSE,
						"ts_wmi_events.ts_wmi_event.Logfile");
				}
				else {
					goto handle_unusual;
				}
				if (input->ExpectTag(48)) goto parse_RecordNumber;
				break;
			}

					// required uint32 RecordNumber = 6;
			case 6: {
				if (tag == 48) {
				parse_RecordNumber:
					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
							input, &recordnumber_)));
					set_has_recordnumber();
				}
				else {
					goto handle_unusual;
				}
				if (input->ExpectTag(58)) goto parse_SourceName;
				break;
			}

					// required string SourceName = 7;
			case 7: {
				if (tag == 58) {
				parse_SourceName:
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->mutable_sourcename()));
					::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
						this->sourcename().data(), this->sourcename().length(),
						::google::protobuf::internal::WireFormat::PARSE,
						"ts_wmi_events.ts_wmi_event.SourceName");
				}
				else {
					goto handle_unusual;
				}
				if (input->ExpectTag(64)) goto parse_TimeGenerated;
				break;
			}

					// required uint64 TimeGenerated = 8;
			case 8: {
				if (tag == 64) {
				parse_TimeGenerated:
					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
							input, &timegenerated_)));
					set_has_timegenerated();
				}
				else {
					goto handle_unusual;
				}
				if (input->ExpectTag(72)) goto parse_TimeWritten;
				break;
			}

					// required uint64 TimeWritten = 9;
			case 9: {
				if (tag == 72) {
				parse_TimeWritten:
					DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
						::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
							input, &timewritten_)));
					set_has_timewritten();
				}
				else {
					goto handle_unusual;
				}
				if (input->ExpectTag(82)) goto parse_User;
				break;
			}

					// required string User = 10;
			case 10: {
				if (tag == 82) {
				parse_User:
					DO_(::google::protobuf::internal::WireFormatLite::ReadString(
						input, this->mutable_user()));
					::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
						this->user().data(), this->user().length(),
						::google::protobuf::internal::WireFormat::PARSE,
						"ts_wmi_events.ts_wmi_event.User");
				}
				else {
					goto handle_unusual;
				}
				if (input->ExpectTag(90)) goto parse_InsertionString;
				break;
			}

					 // repeated .ts_wmi_events.ts_wmi_insertion_pair InsertionString = 11;
			case 11: {
				if (tag == 90) {
				parse_InsertionString:
					DO_(input->IncrementRecursionDepth());
				parse_loop_InsertionString:
					DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
						input, add_insertionstring()));
				}
				else {
					goto handle_unusual;
				}
				if (input->ExpectTag(90)) goto parse_loop_InsertionString;
				input->UnsafeDecrementRecursionDepth();
				if (input->ExpectAtEnd()) goto success;
				break;
			}

			default: {
			handle_unusual:
				if (tag == 0 ||
					::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
					::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
					goto success;
				}
				DO_(::google::protobuf::internal::WireFormat::SkipField(
					input, tag, mutable_unknown_fields()));
				break;
			}
			}
		}
	success:
		// @@protoc_insertion_point(parse_success:ts_wmi_events.ts_wmi_event)
		return true;
	failure:
		// @@protoc_insertion_point(parse_failure:ts_wmi_events.ts_wmi_event)
		return false;
#undef DO_
	}

	void ts_wmi_event::SerializeWithCachedSizes(
		::google::protobuf::io::CodedOutputStream* output) const {
		// @@protoc_insertion_point(serialize_start:ts_wmi_events.ts_wmi_event)
		// required string CategoryString = 1;
		if (has_categorystring()) {
			::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
				this->categorystring().data(), this->categorystring().length(),
				::google::protobuf::internal::WireFormat::SERIALIZE,
				"ts_wmi_events.ts_wmi_event.CategoryString");
			::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
				1, this->categorystring(), output);
		}

		// required string ComputerName = 2;
		if (has_computername()) {
			::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
				this->computername().data(), this->computername().length(),
				::google::protobuf::internal::WireFormat::SERIALIZE,
				"ts_wmi_events.ts_wmi_event.ComputerName");
			::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
				2, this->computername(), output);
		}

		// required uint32 EventIdentifier = 3;
		if (has_eventidentifier()) {
			::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->eventidentifier(), output);
		}

		// required uint32 EventType = 4;
		if (has_eventtype()) {
			::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->eventtype(), output);
		}

		// required string Logfile = 5;
		if (has_logfile()) {
			::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
				this->logfile().data(), this->logfile().length(),
				::google::protobuf::internal::WireFormat::SERIALIZE,
				"ts_wmi_events.ts_wmi_event.Logfile");
			::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
				5, this->logfile(), output);
		}

		// required uint32 RecordNumber = 6;
		if (has_recordnumber()) {
			::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->recordnumber(), output);
		}

		// required string SourceName = 7;
		if (has_sourcename()) {
			::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
				this->sourcename().data(), this->sourcename().length(),
				::google::protobuf::internal::WireFormat::SERIALIZE,
				"ts_wmi_events.ts_wmi_event.SourceName");
			::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
				7, this->sourcename(), output);
		}

		// required uint64 TimeGenerated = 8;
		if (has_timegenerated()) {
			::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->timegenerated(), output);
		}

		// required uint64 TimeWritten = 9;
		if (has_timewritten()) {
			::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->timewritten(), output);
		}

		// required string User = 10;
		if (has_user()) {
			::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
				this->user().data(), this->user().length(),
				::google::protobuf::internal::WireFormat::SERIALIZE,
				"ts_wmi_events.ts_wmi_event.User");
			::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
				10, this->user(), output);
		}

		// repeated .ts_wmi_events.ts_wmi_insertion_pair InsertionString = 11;
		for (unsigned int i = 0, n = this->insertionstring_size(); i < n; i++) {
			::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
				11, this->insertionstring(i), output);
		}

		if (_internal_metadata_.have_unknown_fields()) {
			::google::protobuf::internal::WireFormat::SerializeUnknownFields(
				unknown_fields(), output);
		}
		// @@protoc_insertion_point(serialize_end:ts_wmi_events.ts_wmi_event)
	}

	::google::protobuf::uint8* ts_wmi_event::SerializeWithCachedSizesToArray(
		::google::protobuf::uint8* target) const {
		// @@protoc_insertion_point(serialize_to_array_start:ts_wmi_events.ts_wmi_event)
		// required string CategoryString = 1;
		if (has_categorystring()) {
			::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
				this->categorystring().data(), this->categorystring().length(),
				::google::protobuf::internal::WireFormat::SERIALIZE,
				"ts_wmi_events.ts_wmi_event.CategoryString");
			target =
				::google::protobuf::internal::WireFormatLite::WriteStringToArray(
					1, this->categorystring(), target);
		}

		// required string ComputerName = 2;
		if (has_computername()) {
			::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
				this->computername().data(), this->computername().length(),
				::google::protobuf::internal::WireFormat::SERIALIZE,
				"ts_wmi_events.ts_wmi_event.ComputerName");
			target =
				::google::protobuf::internal::WireFormatLite::WriteStringToArray(
					2, this->computername(), target);
		}

		// required uint32 EventIdentifier = 3;
		if (has_eventidentifier()) {
			target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->eventidentifier(), target);
		}

		// required uint32 EventType = 4;
		if (has_eventtype()) {
			target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->eventtype(), target);
		}

		// required string Logfile = 5;
		if (has_logfile()) {
			::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
				this->logfile().data(), this->logfile().length(),
				::google::protobuf::internal::WireFormat::SERIALIZE,
				"ts_wmi_events.ts_wmi_event.Logfile");
			target =
				::google::protobuf::internal::WireFormatLite::WriteStringToArray(
					5, this->logfile(), target);
		}

		// required uint32 RecordNumber = 6;
		if (has_recordnumber()) {
			target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->recordnumber(), target);
		}

		// required string SourceName = 7;
		if (has_sourcename()) {
			::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
				this->sourcename().data(), this->sourcename().length(),
				::google::protobuf::internal::WireFormat::SERIALIZE,
				"ts_wmi_events.ts_wmi_event.SourceName");
			target =
				::google::protobuf::internal::WireFormatLite::WriteStringToArray(
					7, this->sourcename(), target);
		}

		// required uint64 TimeGenerated = 8;
		if (has_timegenerated()) {
			target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->timegenerated(), target);
		}

		// required uint64 TimeWritten = 9;
		if (has_timewritten()) {
			target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->timewritten(), target);
		}

		// required string User = 10;
		if (has_user()) {
			::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
				this->user().data(), this->user().length(),
				::google::protobuf::internal::WireFormat::SERIALIZE,
				"ts_wmi_events.ts_wmi_event.User");
			target =
				::google::protobuf::internal::WireFormatLite::WriteStringToArray(
					10, this->user(), target);
		}

		// repeated .ts_wmi_events.ts_wmi_insertion_pair InsertionString = 11;
		for (unsigned int i = 0, n = this->insertionstring_size(); i < n; i++) {
			target = ::google::protobuf::internal::WireFormatLite::
				WriteMessageNoVirtualToArray(
					11, this->insertionstring(i), target);
		}

		if (_internal_metadata_.have_unknown_fields()) {
			target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
				unknown_fields(), target);
		}
		// @@protoc_insertion_point(serialize_to_array_end:ts_wmi_events.ts_wmi_event)
		return target;
	}

	int ts_wmi_event::RequiredFieldsByteSizeFallback() const {
		int total_size = 0;

		if (has_categorystring()) {
			// required string CategoryString = 1;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->categorystring());
		}

		if (has_computername()) {
			// required string ComputerName = 2;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->computername());
		}

		if (has_eventidentifier()) {
			// required uint32 EventIdentifier = 3;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::UInt32Size(
					this->eventidentifier());
		}

		if (has_eventtype()) {
			// required uint32 EventType = 4;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::UInt32Size(
					this->eventtype());
		}

		if (has_logfile()) {
			// required string Logfile = 5;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->logfile());
		}

		if (has_recordnumber()) {
			// required uint32 RecordNumber = 6;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::UInt32Size(
					this->recordnumber());
		}

		if (has_sourcename()) {
			// required string SourceName = 7;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->sourcename());
		}

		if (has_timegenerated()) {
			// required uint64 TimeGenerated = 8;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::UInt64Size(
					this->timegenerated());
		}

		if (has_timewritten()) {
			// required uint64 TimeWritten = 9;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::UInt64Size(
					this->timewritten());
		}

		if (has_user()) {
			// required string User = 10;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->user());
		}

		return total_size;
	}
	int ts_wmi_event::ByteSize() const {
		int total_size = 0;

		if (((_has_bits_[0] & 0x000003ff) ^ 0x000003ff) == 0) {  // All required fields are present.
																 // required string CategoryString = 1;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->categorystring());

			// required string ComputerName = 2;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->computername());

			// required uint32 EventIdentifier = 3;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::UInt32Size(
					this->eventidentifier());

			// required uint32 EventType = 4;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::UInt32Size(
					this->eventtype());

			// required string Logfile = 5;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->logfile());

			// required uint32 RecordNumber = 6;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::UInt32Size(
					this->recordnumber());

			// required string SourceName = 7;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->sourcename());

			// required uint64 TimeGenerated = 8;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::UInt64Size(
					this->timegenerated());

			// required uint64 TimeWritten = 9;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::UInt64Size(
					this->timewritten());

			// required string User = 10;
			total_size += 1 +
				::google::protobuf::internal::WireFormatLite::StringSize(
					this->user());

		}
		else {
			total_size += RequiredFieldsByteSizeFallback();
		}
		// repeated .ts_wmi_events.ts_wmi_insertion_pair InsertionString = 11;
		total_size += 1 * this->insertionstring_size();
		for (int i = 0; i < this->insertionstring_size(); i++) {
			total_size +=
				::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
					this->insertionstring(i));
		}

		if (_internal_metadata_.have_unknown_fields()) {
			total_size +=
				::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
					unknown_fields());
		}
		GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
		_cached_size_ = total_size;
		GOOGLE_SAFE_CONCURRENT_WRITES_END();
		return total_size;
	}

	void ts_wmi_event::MergeFrom(const ::google::protobuf::Message& from) {
		if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
		const ts_wmi_event* source =
			::google::protobuf::internal::DynamicCastToGenerated<const ts_wmi_event>(
				&from);
		if (source == NULL) {
			::google::protobuf::internal::ReflectionOps::Merge(from, this);
		}
		else {
			MergeFrom(*source);
		}
	}

	void ts_wmi_event::MergeFrom(const ts_wmi_event& from) {
		if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
		insertionstring_.MergeFrom(from.insertionstring_);
		if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
			if (from.has_categorystring()) {
				set_categorystring(from.categorystring());
			}
			if (from.has_computername()) {
				set_computername(from.computername());
			}
			if (from.has_eventidentifier()) {
				set_eventidentifier(from.eventidentifier());
			}
			if (from.has_eventtype()) {
				set_eventtype(from.eventtype());
			}
			if (from.has_logfile()) {
				set_logfile(from.logfile());
			}
			if (from.has_recordnumber()) {
				set_recordnumber(from.recordnumber());
			}
			if (from.has_sourcename()) {
				set_sourcename(from.sourcename());
			}
			if (from.has_timegenerated()) {
				set_timegenerated(from.timegenerated());
			}
		}
		if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
			if (from.has_timewritten()) {
				set_timewritten(from.timewritten());
			}
			if (from.has_user()) {
				set_user(from.user());
			}
		}
		if (from._internal_metadata_.have_unknown_fields()) {
			mutable_unknown_fields()->MergeFrom(from.unknown_fields());
		}
	}

	void ts_wmi_event::CopyFrom(const ::google::protobuf::Message& from) {
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	void ts_wmi_event::CopyFrom(const ts_wmi_event& from) {
		if (&from == this) return;
		Clear();
		MergeFrom(from);
	}

	bool ts_wmi_event::IsInitialized() const {
		if ((_has_bits_[0] & 0x000003ff) != 0x000003ff) return false;

		if (!::google::protobuf::internal::AllAreInitialized(this->insertionstring())) return false;
		return true;
	}

	void ts_wmi_event::Swap(ts_wmi_event* other) {
		if (other == this) return;
		if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
			InternalSwap(other);
		}
		else {
			ts_wmi_event temp;
			temp.MergeFrom(*this);
			CopyFrom(*other);
			other->CopyFrom(temp);
		}
	}
	void ts_wmi_event::UnsafeArenaSwap(ts_wmi_event* other) {
		if (other == this) return;
		GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
		InternalSwap(other);
	}
	void ts_wmi_event::InternalSwap(ts_wmi_event* other) {
		categorystring_.Swap(&other->categorystring_);
		computername_.Swap(&other->computername_);
		std::swap(eventidentifier_, other->eventidentifier_);
		std::swap(eventtype_, other->eventtype_);
		logfile_.Swap(&other->logfile_);
		std::swap(recordnumber_, other->recordnumber_);
		sourcename_.Swap(&other->sourcename_);
		std::swap(timegenerated_, other->timegenerated_);
		std::swap(timewritten_, other->timewritten_);
		user_.Swap(&other->user_);
		insertionstring_.UnsafeArenaSwap(&other->insertionstring_);
		std::swap(_has_bits_[0], other->_has_bits_[0]);
		_internal_metadata_.Swap(&other->_internal_metadata_);
		std::swap(_cached_size_, other->_cached_size_);
	}

	::google::protobuf::Metadata ts_wmi_event::GetMetadata() const {
		protobuf_AssignDescriptorsOnce();
		::google::protobuf::Metadata metadata;
		metadata.descriptor = ts_wmi_event_descriptor_;
		metadata.reflection = ts_wmi_event_reflection_;
		return metadata;
	}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
	// ts_wmi_event

	// required string CategoryString = 1;
	bool ts_wmi_event::has_categorystring() const {
		return (_has_bits_[0] & 0x00000001u) != 0;
	}
	void ts_wmi_event::set_has_categorystring() {
		_has_bits_[0] |= 0x00000001u;
	}
	void ts_wmi_event::clear_has_categorystring() {
		_has_bits_[0] &= ~0x00000001u;
	}
	void ts_wmi_event::clear_categorystring() {
		categorystring_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		clear_has_categorystring();
	}
	const ::std::string& ts_wmi_event::categorystring() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.CategoryString)
		return categorystring_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	void ts_wmi_event::set_categorystring(const ::std::string& value) {
		set_has_categorystring();
		categorystring_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.CategoryString)
	}
	void ts_wmi_event::set_categorystring(const char* value) {
		set_has_categorystring();
		categorystring_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_char:ts_wmi_events.ts_wmi_event.CategoryString)
	}
	void ts_wmi_event::set_categorystring(const char* value,
		size_t size) {
		set_has_categorystring();
		categorystring_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
			reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_pointer:ts_wmi_events.ts_wmi_event.CategoryString)
	}
	::std::string* ts_wmi_event::mutable_categorystring() {
		set_has_categorystring();
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_event.CategoryString)
		return categorystring_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	::std::string* ts_wmi_event::release_categorystring() {
		clear_has_categorystring();
		return categorystring_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	::std::string* ts_wmi_event::unsafe_arena_release_categorystring() {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		clear_has_categorystring();
		return categorystring_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			GetArenaNoVirtual());
	}
	void ts_wmi_event::set_allocated_categorystring(::std::string* categorystring) {
		if (categorystring != NULL) {
			set_has_categorystring();
		}
		else {
			clear_has_categorystring();
		}
		categorystring_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), categorystring,
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.CategoryString)
	}
	void ts_wmi_event::unsafe_arena_set_allocated_categorystring(
		::std::string* categorystring) {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		if (categorystring != NULL) {
			set_has_categorystring();
		}
		else {
			clear_has_categorystring();
		}
		categorystring_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			categorystring, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.CategoryString)
	}

	// required string ComputerName = 2;
	bool ts_wmi_event::has_computername() const {
		return (_has_bits_[0] & 0x00000002u) != 0;
	}
	void ts_wmi_event::set_has_computername() {
		_has_bits_[0] |= 0x00000002u;
	}
	void ts_wmi_event::clear_has_computername() {
		_has_bits_[0] &= ~0x00000002u;
	}
	void ts_wmi_event::clear_computername() {
		computername_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		clear_has_computername();
	}
	const ::std::string& ts_wmi_event::computername() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.ComputerName)
		return computername_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	void ts_wmi_event::set_computername(const ::std::string& value) {
		set_has_computername();
		computername_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.ComputerName)
	}
	void ts_wmi_event::set_computername(const char* value) {
		set_has_computername();
		computername_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_char:ts_wmi_events.ts_wmi_event.ComputerName)
	}
	void ts_wmi_event::set_computername(const char* value,
		size_t size) {
		set_has_computername();
		computername_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
			reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_pointer:ts_wmi_events.ts_wmi_event.ComputerName)
	}
	::std::string* ts_wmi_event::mutable_computername() {
		set_has_computername();
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_event.ComputerName)
		return computername_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	::std::string* ts_wmi_event::release_computername() {
		clear_has_computername();
		return computername_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	::std::string* ts_wmi_event::unsafe_arena_release_computername() {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		clear_has_computername();
		return computername_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			GetArenaNoVirtual());
	}
	void ts_wmi_event::set_allocated_computername(::std::string* computername) {
		if (computername != NULL) {
			set_has_computername();
		}
		else {
			clear_has_computername();
		}
		computername_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), computername,
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.ComputerName)
	}
	void ts_wmi_event::unsafe_arena_set_allocated_computername(
		::std::string* computername) {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		if (computername != NULL) {
			set_has_computername();
		}
		else {
			clear_has_computername();
		}
		computername_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			computername, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.ComputerName)
	}

	// required uint32 EventIdentifier = 3;
	bool ts_wmi_event::has_eventidentifier() const {
		return (_has_bits_[0] & 0x00000004u) != 0;
	}
	void ts_wmi_event::set_has_eventidentifier() {
		_has_bits_[0] |= 0x00000004u;
	}
	void ts_wmi_event::clear_has_eventidentifier() {
		_has_bits_[0] &= ~0x00000004u;
	}
	void ts_wmi_event::clear_eventidentifier() {
		eventidentifier_ = 0u;
		clear_has_eventidentifier();
	}
	::google::protobuf::uint32 ts_wmi_event::eventidentifier() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.EventIdentifier)
		return eventidentifier_;
	}
	void ts_wmi_event::set_eventidentifier(::google::protobuf::uint32 value) {
		set_has_eventidentifier();
		eventidentifier_ = value;
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.EventIdentifier)
	}

	// required uint32 EventType = 4;
	bool ts_wmi_event::has_eventtype() const {
		return (_has_bits_[0] & 0x00000008u) != 0;
	}
	void ts_wmi_event::set_has_eventtype() {
		_has_bits_[0] |= 0x00000008u;
	}
	void ts_wmi_event::clear_has_eventtype() {
		_has_bits_[0] &= ~0x00000008u;
	}
	void ts_wmi_event::clear_eventtype() {
		eventtype_ = 0u;
		clear_has_eventtype();
	}
	::google::protobuf::uint32 ts_wmi_event::eventtype() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.EventType)
		return eventtype_;
	}
	void ts_wmi_event::set_eventtype(::google::protobuf::uint32 value) {
		set_has_eventtype();
		eventtype_ = value;
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.EventType)
	}

	// required string Logfile = 5;
	bool ts_wmi_event::has_logfile() const {
		return (_has_bits_[0] & 0x00000010u) != 0;
	}
	void ts_wmi_event::set_has_logfile() {
		_has_bits_[0] |= 0x00000010u;
	}
	void ts_wmi_event::clear_has_logfile() {
		_has_bits_[0] &= ~0x00000010u;
	}
	void ts_wmi_event::clear_logfile() {
		logfile_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		clear_has_logfile();
	}
	const ::std::string& ts_wmi_event::logfile() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.Logfile)
		return logfile_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	void ts_wmi_event::set_logfile(const ::std::string& value) {
		set_has_logfile();
		logfile_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.Logfile)
	}
	void ts_wmi_event::set_logfile(const char* value) {
		set_has_logfile();
		logfile_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_char:ts_wmi_events.ts_wmi_event.Logfile)
	}
	void ts_wmi_event::set_logfile(const char* value,
		size_t size) {
		set_has_logfile();
		logfile_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
			reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_pointer:ts_wmi_events.ts_wmi_event.Logfile)
	}
	::std::string* ts_wmi_event::mutable_logfile() {
		set_has_logfile();
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_event.Logfile)
		return logfile_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	::std::string* ts_wmi_event::release_logfile() {
		clear_has_logfile();
		return logfile_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	::std::string* ts_wmi_event::unsafe_arena_release_logfile() {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		clear_has_logfile();
		return logfile_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			GetArenaNoVirtual());
	}
	void ts_wmi_event::set_allocated_logfile(::std::string* logfile) {
		if (logfile != NULL) {
			set_has_logfile();
		}
		else {
			clear_has_logfile();
		}
		logfile_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logfile,
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.Logfile)
	}
	void ts_wmi_event::unsafe_arena_set_allocated_logfile(
		::std::string* logfile) {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		if (logfile != NULL) {
			set_has_logfile();
		}
		else {
			clear_has_logfile();
		}
		logfile_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			logfile, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.Logfile)
	}

	// required uint32 RecordNumber = 6;
	bool ts_wmi_event::has_recordnumber() const {
		return (_has_bits_[0] & 0x00000020u) != 0;
	}
	void ts_wmi_event::set_has_recordnumber() {
		_has_bits_[0] |= 0x00000020u;
	}
	void ts_wmi_event::clear_has_recordnumber() {
		_has_bits_[0] &= ~0x00000020u;
	}
	void ts_wmi_event::clear_recordnumber() {
		recordnumber_ = 0u;
		clear_has_recordnumber();
	}
	::google::protobuf::uint32 ts_wmi_event::recordnumber() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.RecordNumber)
		return recordnumber_;
	}
	void ts_wmi_event::set_recordnumber(::google::protobuf::uint32 value) {
		set_has_recordnumber();
		recordnumber_ = value;
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.RecordNumber)
	}

	// required string SourceName = 7;
	bool ts_wmi_event::has_sourcename() const {
		return (_has_bits_[0] & 0x00000040u) != 0;
	}
	void ts_wmi_event::set_has_sourcename() {
		_has_bits_[0] |= 0x00000040u;
	}
	void ts_wmi_event::clear_has_sourcename() {
		_has_bits_[0] &= ~0x00000040u;
	}
	void ts_wmi_event::clear_sourcename() {
		sourcename_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		clear_has_sourcename();
	}
	const ::std::string& ts_wmi_event::sourcename() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.SourceName)
		return sourcename_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	void ts_wmi_event::set_sourcename(const ::std::string& value) {
		set_has_sourcename();
		sourcename_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.SourceName)
	}
	void ts_wmi_event::set_sourcename(const char* value) {
		set_has_sourcename();
		sourcename_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_char:ts_wmi_events.ts_wmi_event.SourceName)
	}
	void ts_wmi_event::set_sourcename(const char* value,
		size_t size) {
		set_has_sourcename();
		sourcename_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
			reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_pointer:ts_wmi_events.ts_wmi_event.SourceName)
	}
	::std::string* ts_wmi_event::mutable_sourcename() {
		set_has_sourcename();
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_event.SourceName)
		return sourcename_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	::std::string* ts_wmi_event::release_sourcename() {
		clear_has_sourcename();
		return sourcename_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	::std::string* ts_wmi_event::unsafe_arena_release_sourcename() {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		clear_has_sourcename();
		return sourcename_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			GetArenaNoVirtual());
	}
	void ts_wmi_event::set_allocated_sourcename(::std::string* sourcename) {
		if (sourcename != NULL) {
			set_has_sourcename();
		}
		else {
			clear_has_sourcename();
		}
		sourcename_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sourcename,
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.SourceName)
	}
	void ts_wmi_event::unsafe_arena_set_allocated_sourcename(
		::std::string* sourcename) {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		if (sourcename != NULL) {
			set_has_sourcename();
		}
		else {
			clear_has_sourcename();
		}
		sourcename_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			sourcename, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.SourceName)
	}

	// required uint64 TimeGenerated = 8;
	bool ts_wmi_event::has_timegenerated() const {
		return (_has_bits_[0] & 0x00000080u) != 0;
	}
	void ts_wmi_event::set_has_timegenerated() {
		_has_bits_[0] |= 0x00000080u;
	}
	void ts_wmi_event::clear_has_timegenerated() {
		_has_bits_[0] &= ~0x00000080u;
	}
	void ts_wmi_event::clear_timegenerated() {
		timegenerated_ = GOOGLE_ULONGLONG(0);
		clear_has_timegenerated();
	}
	::google::protobuf::uint64 ts_wmi_event::timegenerated() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.TimeGenerated)
		return timegenerated_;
	}
	void ts_wmi_event::set_timegenerated(::google::protobuf::uint64 value) {
		set_has_timegenerated();
		timegenerated_ = value;
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.TimeGenerated)
	}

	// required uint64 TimeWritten = 9;
	bool ts_wmi_event::has_timewritten() const {
		return (_has_bits_[0] & 0x00000100u) != 0;
	}
	void ts_wmi_event::set_has_timewritten() {
		_has_bits_[0] |= 0x00000100u;
	}
	void ts_wmi_event::clear_has_timewritten() {
		_has_bits_[0] &= ~0x00000100u;
	}
	void ts_wmi_event::clear_timewritten() {
		timewritten_ = GOOGLE_ULONGLONG(0);
		clear_has_timewritten();
	}
	::google::protobuf::uint64 ts_wmi_event::timewritten() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.TimeWritten)
		return timewritten_;
	}
	void ts_wmi_event::set_timewritten(::google::protobuf::uint64 value) {
		set_has_timewritten();
		timewritten_ = value;
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.TimeWritten)
	}

	// required string User = 10;
	bool ts_wmi_event::has_user() const {
		return (_has_bits_[0] & 0x00000200u) != 0;
	}
	void ts_wmi_event::set_has_user() {
		_has_bits_[0] |= 0x00000200u;
	}
	void ts_wmi_event::clear_has_user() {
		_has_bits_[0] &= ~0x00000200u;
	}
	void ts_wmi_event::clear_user() {
		user_.ClearToEmpty(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
		clear_has_user();
	}
	const ::std::string& ts_wmi_event::user() const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.User)
		return user_.Get(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
	}
	void ts_wmi_event::set_user(const ::std::string& value) {
		set_has_user();
		user_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set:ts_wmi_events.ts_wmi_event.User)
	}
	void ts_wmi_event::set_user(const char* value) {
		set_has_user();
		user_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_char:ts_wmi_events.ts_wmi_event.User)
	}
	void ts_wmi_event::set_user(const char* value,
		size_t size) {
		set_has_user();
		user_.Set(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
			reinterpret_cast<const char*>(value), size), GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_pointer:ts_wmi_events.ts_wmi_event.User)
	}
	::std::string* ts_wmi_event::mutable_user() {
		set_has_user();
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_event.User)
		return user_.Mutable(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	::std::string* ts_wmi_event::release_user() {
		clear_has_user();
		return user_.Release(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), GetArenaNoVirtual());
	}
	::std::string* ts_wmi_event::unsafe_arena_release_user() {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		clear_has_user();
		return user_.UnsafeArenaRelease(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			GetArenaNoVirtual());
	}
	void ts_wmi_event::set_allocated_user(::std::string* user) {
		if (user != NULL) {
			set_has_user();
		}
		else {
			clear_has_user();
		}
		user_.SetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user,
			GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.User)
	}
	void ts_wmi_event::unsafe_arena_set_allocated_user(
		::std::string* user) {
		GOOGLE_DCHECK(GetArenaNoVirtual() != NULL);
		if (user != NULL) {
			set_has_user();
		}
		else {
			clear_has_user();
		}
		user_.UnsafeArenaSetAllocated(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
			user, GetArenaNoVirtual());
		// @@protoc_insertion_point(field_set_allocated:ts_wmi_events.ts_wmi_event.User)
	}

	// repeated .ts_wmi_events.ts_wmi_insertion_pair InsertionString = 11;
	int ts_wmi_event::insertionstring_size() const {
		return insertionstring_.size();
	}
	void ts_wmi_event::clear_insertionstring() {
		insertionstring_.Clear();
	}
	const ::ts_wmi_events::ts_wmi_insertion_pair& ts_wmi_event::insertionstring(int index) const {
		// @@protoc_insertion_point(field_get:ts_wmi_events.ts_wmi_event.InsertionString)
		return insertionstring_.Get(index);
	}
	::ts_wmi_events::ts_wmi_insertion_pair* ts_wmi_event::mutable_insertionstring(int index) {
		// @@protoc_insertion_point(field_mutable:ts_wmi_events.ts_wmi_event.InsertionString)
		return insertionstring_.Mutable(index);
	}
	::ts_wmi_events::ts_wmi_insertion_pair* ts_wmi_event::add_insertionstring() {
		// @@protoc_insertion_point(field_add:ts_wmi_events.ts_wmi_event.InsertionString)
		return insertionstring_.Add();
	}
	::google::protobuf::RepeatedPtrField< ::ts_wmi_events::ts_wmi_insertion_pair >*
		ts_wmi_event::mutable_insertionstring() {
		// @@protoc_insertion_point(field_mutable_list:ts_wmi_events.ts_wmi_event.InsertionString)
		return &insertionstring_;
	}
	const ::google::protobuf::RepeatedPtrField< ::ts_wmi_events::ts_wmi_insertion_pair >&
		ts_wmi_event::insertionstring() const {
		// @@protoc_insertion_point(field_list:ts_wmi_events.ts_wmi_event.InsertionString)
		return insertionstring_;
	}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

	// @@protoc_insertion_point(namespace_scope)

}  // namespace ts_wmi_events

   // @@protoc_insertion_point(global_scope)
